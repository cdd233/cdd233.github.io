<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git常用命令</title>
    <url>/Rules/16f8815d.html</url>
    <content><![CDATA[<h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><h3 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;zhazhahui&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;zhazhahui@example.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>配置好用户名和邮箱后，会在当前用户主目录下建立<code>.gitconfig</code>文件，该配置文件即<code>git</code>全局配置的文件，一般配置方法为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global &lt;配置名称&gt; &lt;配置的值&gt;</span><br></pre></td></tr></table></figure>
<p>假如想在某个项目里设置某个值与全局设置有区别，可以把<code>--global</code>去掉，会在当前项目目录下创建<code>.git/config</code>来对当前项目配置单独生效<br><br></p>
<h3 id="创建SSH密钥"><a href="#创建SSH密钥" class="headerlink" title="创建SSH密钥"></a>创建SSH密钥</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;zhazhahui@example.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>创建成功后，用户主目录会生成<code>.ssh</code>，含<code>id_rsa</code>、<code>id_rsa.pub</code>两个文件，即<code>SSH Key</code>的密钥对</p>
<blockquote>
<p><code>id_rsa</code>(私钥)不能泄露出去，<code>id_rsa.pub</code>(公钥)可以放心告诉任何人</p>
</blockquote>
<br>

<h3 id="公钥贴到Github"><a href="#公钥贴到Github" class="headerlink" title="公钥贴到Github"></a>公钥贴到<a href="https://github.com/" title="点击跳转至GIthub官网..">Github</a></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /home/&lt;user&gt;/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Tip：　文件的路径根据自己的实际路径进行更改</p>
</blockquote>
<hr>
<p><br><br></p>
<h2 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h2><h3 id="remote"><a href="#remote" class="headerlink" title="remote"></a>remote</h3><h4 id="查看所有的远程主机，使用-v可以查看远程主机的网址"><a href="#查看所有的远程主机，使用-v可以查看远程主机的网址" class="headerlink" title="查看所有的远程主机，使用-v可以查看远程主机的网址"></a>查看所有的远程主机，使用<code>-v</code>可以查看远程主机的网址</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure>

<h4 id="关联远程主机，并设主机名为origin"><a href="#关联远程主机，并设主机名为origin" class="headerlink" title="关联远程主机，并设主机名为origin"></a>关联远程主机，并设主机名为<code>origin</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote add origin https://github.com/liangzaiming/example.git</span><br></pre></td></tr></table></figure>

<h4 id="删除主机名为origin的远程主机"><a href="#删除主机名为origin的远程主机" class="headerlink" title="删除主机名为origin的远程主机"></a>删除主机名为<code>origin</code>的远程主机</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote remove origin</span><br></pre></td></tr></table></figure>
<br>


<h3 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h3><h4 id="查看当前所在分支的情况"><a href="#查看当前所在分支的情况" class="headerlink" title="查看当前所在分支的情况"></a>查看当前所在分支的情况</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure>

<h4 id="创建分支-a"><a href="#创建分支-a" class="headerlink" title="创建分支 a"></a>创建分支 a</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git branch a</span><br></pre></td></tr></table></figure>

<h4 id="切换到分支-a"><a href="#切换到分支-a" class="headerlink" title="切换到分支 a"></a>切换到分支 a</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git checkout a</span><br></pre></td></tr></table></figure>

<h4 id="创建并切换到分支-a"><a href="#创建并切换到分支-a" class="headerlink" title="创建并切换到分支 a"></a>创建并切换到分支 a</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git checkout -b a</span><br></pre></td></tr></table></figure>

<h4 id="删除分支-a-，若-a-分支的内容没合并到其他分支，则需要使用-D强制删除"><a href="#删除分支-a-，若-a-分支的内容没合并到其他分支，则需要使用-D强制删除" class="headerlink" title="删除分支 a ，若 a 分支的内容没合并到其他分支，则需要使用-D强制删除"></a>删除分支 a ，若 a 分支的内容没合并到其他分支，则需要使用<code>-D</code>强制删除</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git branch -d a</span><br></pre></td></tr></table></figure>
<br>


<h3 id="merge"><a href="#merge" class="headerlink" title="merge"></a>merge</h3><h4 id="合并分支-a-的内容到分支master上（必须把所在分支切换到master上）"><a href="#合并分支-a-的内容到分支master上（必须把所在分支切换到master上）" class="headerlink" title="合并分支 a 的内容到分支master上（必须把所在分支切换到master上）"></a>合并分支 a 的内容到分支<code>master</code>上（必须把所在分支切换到<code>master</code>上）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git merge a</span><br></pre></td></tr></table></figure>
<br>


<h3 id="clone"><a href="#clone" class="headerlink" title="clone"></a>clone</h3><h4 id="从远程库克隆repository到当前文件夹"><a href="#从远程库克隆repository到当前文件夹" class="headerlink" title="从远程库克隆repository到当前文件夹"></a>从远程库克隆<code>repository</code>到当前文件夹</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/liangzaiming/example.git</span><br></pre></td></tr></table></figure>
<br>

<h3 id="status"><a href="#status" class="headerlink" title="status"></a>status</h3><h4 id="显示工作树状态"><a href="#显示工作树状态" class="headerlink" title="显示工作树状态"></a>显示工作树状态</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure>

<hr>
<p><br><br></p>
<h3 id="push"><a href="#push" class="headerlink" title="push"></a>push</h3><h4 id="添加文件并更新推送到远程master分支"><a href="#添加文件并更新推送到远程master分支" class="headerlink" title="添加文件并更新推送到远程master分支"></a>添加文件并更新推送到远程<code>master</code>分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add &lt;fileName&gt;</span><br><span class="line">$ git commit -m <span class="string">&quot;Here write the changes of explain&quot;</span></span><br><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure>
<br>

<h4 id="删除文件并更新推送到远程master分支"><a href="#删除文件并更新推送到远程master分支" class="headerlink" title="删除文件并更新推送到远程master分支"></a>删除文件并更新推送到远程<code>master</code>分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">rm</span> &lt;fileName&gt;</span><br><span class="line">$ git commit -m <span class="string">&quot;Here write the changes of explain&quot;</span></span><br><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure>
<br>

<h4 id="从远程master分支下载更新的内容到本地"><a href="#从远程master分支下载更新的内容到本地" class="headerlink" title="从远程master分支下载更新的内容到本地"></a>从远程<code>master</code>分支下载更新的内容到本地</h4><p>　　多人协作时<code>push</code>先<code>pull</code>，不容易发生冲突</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure>

<hr>
<p><br><br></p>
<blockquote>
<p>Tips:   By the way, if u want to know even more operations for the git.<br>plese click this net link：<a href="https://pan.baidu.com/s/19FLS9--Gz1EscIUj-grJAQ">learn-github-from-zero.pdf</a>　　password： <del>ppa9</del></p>
</blockquote>
<hr>
<table>
<thead>
<tr>
<th>Event</th>
<th>Time</th>
<th>Remark</th>
</tr>
</thead>
<tbody><tr>
<td>create</td>
<td>2015.10.22</td>
<td>创建并记录部分语法</td>
</tr>
<tr>
<td>update</td>
<td>2016.08.11</td>
<td>重构文章的内容和排版,并增加部分语法</td>
</tr>
<tr>
<td>update</td>
<td>2017.04.11</td>
<td>添加部分常用的语法</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Rules</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Archlinux+Windows10双系统安装教程</title>
    <url>/Linux/2a8a344e.html</url>
    <content><![CDATA[<p>　—— 本文主要针对的是使用<code>BIOS</code>和<code>MBR</code>的计算机，不过考虑到目前都开始使用支持<code>UEFI</code>的机器<br>　—— 并且可能由于部分原因需要使用<code>GPT</code>，所以附上相关安装方法，但安装方法本人尚未测试。</p>
<span id="more"></span>
<p><br><br></p>
<p>*Archlinux的优点：</p>
<ol>
<li>滚动升级，再也无需因为发行版的更新和重装系统</li>
<li>软件包很新，第一时间尝试新的软件，比如最新的内核</li>
<li><code>pacman</code>能够完美得处理软件包的依赖问题，再也不会因为删除<code>ibus</code>而导致<code>gnome</code>启动不了</li>
<li>详细的<code>wiki</code>，基本能够找到你想要的，如果你的英文OK（所以大家还是要适当重视下英文的）<br></li>
</ol>
<p>*Archlinux 的缺点：</p>
<ol>
<li>据说<code>pacman</code>会滚动失败，反正我是从没遇到过</li>
<li>安装有一定难度，这不就是这个教程存在的意义么</li>
<li>软件包都是最新的，所以可能存在<code>bug</code>，确实够恶心的，貌似他们没有测试完全</li>
</ol>
<blockquote>
<p>总结：Archlinux适合喜欢折腾的人，我确信你们也将和我一样热爱这个系统</p>
</blockquote>
<hr>
<p>* Warming：文中出现<code>ps</code>字样的均表示本人所进行的安装方式！！</p>
<table>
<thead>
<tr>
<th align="center">Category</th>
<th align="center">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="center">系统</td>
<td align="center">win10 + archlinux</td>
</tr>
<tr>
<td align="center">安装版本</td>
<td align="center">archlinux-2016.03.01-dual.iso</td>
</tr>
<tr>
<td align="center">安装盘</td>
<td align="center">PowerISO制作U盘启动器</td>
</tr>
<tr>
<td align="center">分区工具</td>
<td align="center">PE系统，划分出来的盘分别是<code>sda3</code>、<code>sda4</code></td>
</tr>
<tr>
<td align="center">网络连接</td>
<td align="center">无线网络</td>
</tr>
<tr>
<td align="center"><br><br></td>
<td align="center"></td>
</tr>
</tbody></table>
<h1 id="以下奉上安装教程："><a href="#以下奉上安装教程：" class="headerlink" title="以下奉上安装教程："></a>以下奉上安装教程：</h1><h2 id="一、安装准备"><a href="#一、安装准备" class="headerlink" title="一、安装准备"></a>一、安装准备</h2><h3 id="1x01-下载镜像"><a href="#1x01-下载镜像" class="headerlink" title="1x01. 下载镜像"></a>1x01. 下载镜像</h3><p>　　Archlinux镜像文件官方下载地址：<a href="https://www.archlinux.org/download">https://www.archlinux.org/download</a><br>　　国人都喜欢<code>163</code>的源，所以此处我选择<code>163</code>的源下载，下载成功后进行<code>MD5</code>和<code>SHA1</code>校验，防止包出错<br>　　此教程中我选择的是刻录到U盘，制作U盘启动器，你们可以根据自己的需求进行选择<br><br></p>
<h3 id="1x02-连接网络"><a href="#1x02-连接网络" class="headerlink" title="1x02. 连接网络"></a>1x02. 连接网络</h3><p>　　Archlinux所有的安装包都是从网络上下载安装的，所以在安装之前，一定要确保系统是保持联网状态<br>　　此处我采用的是无线网络连接方式，其他连接方式可以自行<code>wiki</code>或<code>google</code>，连接后<code>ping</code>测试是否接通</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wifi-menu</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="二、安装基本系统"><a href="#二、安装基本系统" class="headerlink" title="二、安装基本系统"></a>二、安装基本系统</h2><h3 id="2x01-UEFI模式测试"><a href="#2x01-UEFI模式测试" class="headerlink" title="2x01.UEFI模式测试"></a>2x01.<code>UEFI</code>模式测试</h3><p>　　如果你想使用<code>UEFI</code>，并且你的机器支持<code>UEFI</code>，你在引导时应该会看到如下选项，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Arch Linux archiso x86_64 UEFI USB</span></span><br><span class="line"><span class="comment"># UEFI Shell x86_64 v1</span></span><br><span class="line"><span class="comment"># UEFI Shell x86_64 v2</span></span><br><span class="line"><span class="comment"># EFI Default Loader</span></span><br></pre></td></tr></table></figure>

<p>　　你应该可以知道Archlinux只提供<code>64</code>位的<code>UEFI</code>模式安装，<code>32</code>位无法引导，如果你忘记了是否出现过上述选项，你也可以使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ efivar -l</span><br></pre></td></tr></table></figure>

<p>　　如果你看到了一大串内容，那就是进入了<code>UEFI</code>安装模式。否则，请记住，你的电脑可能不支持<code>UEFI</code>或者你没进入<code>UEFI</code>安装模式，在后续内容中，你应该选择<code>BIOS</code>和<code>MBR</code>。<br><br></p>
<h3 id="2x02-创建分区"><a href="#2x02-创建分区" class="headerlink" title="2x02. 创建分区"></a>2x02. 创建分区</h3><p>　　1）　在这里设计到一个很大的内容，如何安排分区，这个看每个人如何规划了，下面我将使用一个比较普遍的方案：</p>
<pre><code>    /dev/sda1  200M  /boot  物理分区
    /dev/sda2  40G   /      物理分区
    /dev/sda3  60G   /home  物理分区
    /dev/sda4  4G    swap   物理分区
</code></pre>
<p>　　首先是<code>MBR</code>分区的创建，这里使用的分区工具是<code>fdisk</code>，本机只有一个硬盘，所以使用<code>/dev/sda</code>，如果有多个硬盘，根据绝对地址修改路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ fdisk /dev/sda</span><br></pre></td></tr></table></figure>

<p>　　其次是<code>GPT</code>分区，基本和<code>MBR</code>分区一样，只是我们使用的工具是<code>gdisk</code>，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gdisk /dev/sda</span><br></pre></td></tr></table></figure>

<p>　　需要注意的是分区的标志，</p>
<pre><code>    /dev/sda1 EF00
    /dev/sda2 8300
    /dev/sda3 8300
    /dev/sda4 8200
</code></pre>
<p>　　ps：因为本人采用的是双系统，只剩下两个主分区，因此只分区<code>/</code>和<code>/home</code>，利用<code>PE</code>系统对这两个分区进行新建分区，格式暂选为默认的<code>FAT32</code>，格式化后退出。因为我是利用U盘进行安装，所以得先进入<code>BIOS</code>系统设置优先启动方式为U盘启动，重启後进入U盘中的Archlinux，进入前已用<code>PE</code>系统对其进行分区，所以无需再使用<code>fdisk</code>分区工具对<code>sda</code>盘进行操作<br><br></p>
<h3 id="2x03-安装文件系统"><a href="#2x03-安装文件系统" class="headerlink" title="2x03. 安装文件系统"></a>2x03. 安装文件系统</h3><p>　　1）在这里<code>GPT</code>和<code>MBR</code>的区别只有<code>/dev/sda1</code>这个分区，我们放到最后解释。<br>      这里我们使用的<code>FS</code>是比较成熟的<code>ext4</code>，最后一条命令是开启交换分区，即<code>swap</code>分区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkfs.ext4 /dev/sda2</span><br><span class="line">$ mfks.ext4 /dev/sda3</span><br><span class="line">$ mkswap /dev/sda4</span><br><span class="line">$ swapon /dev/sda4</span><br></pre></td></tr></table></figure>


<p>　　2）对于<code>/boot</code>这个分区，使用<code>MBR</code>的命令如下：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkfs.ext4 /dev/sda1</span><br></pre></td></tr></table></figure>

<p>　　对于<code>GPT</code>分区，请使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkfs.fat -F32 /dev/sd1</span><br></pre></td></tr></table></figure>

<blockquote>
<p>ps：本人只有两个目录，盘符为<code>sda3</code>和<code>sda4</code>，没有<code>/boot</code>和<code>swap</code>分区，<br>　　不过在以后的使用中需要用到的话可以手动加</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkfs.ext4 /dev/sda3</span><br><span class="line">$ mfks.ext4 /dev/sda4</span><br></pre></td></tr></table></figure>
<br>

<h3 id="2x04-挂载分区"><a href="#2x04-挂载分区" class="headerlink" title="2x04. 挂载分区"></a>2x04. 挂载分区</h3><p>　　如果你使用推荐的分区，请使用以下命令，否则，请自行调整</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mount /dev/sda2 /mnt</span><br><span class="line">$ <span class="built_in">mkdir</span> /mnt/&#123;boot,home&#125;</span><br><span class="line">$ mount /dev/sda1 /mnt/boot</span><br><span class="line">$ mount /dev/sda3 /mnt/home</span><br></pre></td></tr></table></figure>

<blockquote>
<p>ps：这是根据我自己的分区情况进行挂载的分区</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mount /dev/sda3 /mnt</span><br><span class="line">$ <span class="built_in">mkdir</span> /mnt/home</span><br><span class="line">$ mount /dev/sda4 /mnt/home</span><br></pre></td></tr></table></figure>
<br>

<h3 id="2x05-选择更新源"><a href="#2x05-选择更新源" class="headerlink" title="2x05. 选择更新源"></a>2x05. 选择更新源</h3><p>　　1）　根据你的网络环境选择镜像，选择镜像，只需要将对应地址前的<code>#</code>去掉即可，<br>这里推荐使用<code>ustc</code>或者<code>163</code>的源，添加后执行<code>pacman -Syy</code>刷新一下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nano /etc/pacman.d/mirrorlist</span><br><span class="line">$ pacman -Syy</span><br></pre></td></tr></table></figure>

<p>163更新源：Server &#x3D; <a href="http://mirrors.163.com/archlinux/$repo/os/$arch">http://mirrors.163.com/archlinux/$repo/os/$arch</a><br>ustc更新源：Server &#x3D; <a href="http://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch">http://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch</a><br><br></p>
<h3 id="2x06-部署基本系统"><a href="#2x06-部署基本系统" class="headerlink" title="2x06. 部署基本系统"></a>2x06. 部署基本系统</h3><p>　　一条基本的命令就能自动完成部署，比<code>Gentoo</code>简单不少,<br>　　如果你想使用<code>netstat</code>和<code>ifconfig</code>之类的指令，请加上<code>net-tools</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacstrap -i /mnt base base-devel net-tools</span><br></pre></td></tr></table></figure>
<br>

<h3 id="2x07-生成fstab"><a href="#2x07-生成fstab" class="headerlink" title="2x07. 生成fstab"></a>2x07. 生成<code>fstab</code></h3><p>　　<code>fstab</code>中记录了挂载的相关信息，Archlinux中提供了工具来一键生成</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure>

<p>　　这里使用的是<code>UUID</code>，如果不加<code>-U</code>，那么在<code>fstab</code>中记录的就是<code>/dev/sdx</code>之类的地址，<code>UUID</code>的方式更加好，原因请自行 <a href="https://wiki.archlinux.org/" title="archlinux wiki">wiki</a><br><br><br></p>
<h2 id="三、基本系统配置"><a href="#三、基本系统配置" class="headerlink" title="三、基本系统配置"></a>三、基本系统配置</h2><h3 id="3x01-chroot到新系统"><a href="#3x01-chroot到新系统" class="headerlink" title="3x01. chroot到新系统"></a>3x01. <code>chroot</code>到新系统</h3><p>　　使用<code>chroot</code>进入部署好的基本系统，接下来的命令都将在刚刚安装的 Archlinux 系统中执行并生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ arch-chroot /mnt /bin/bash</span><br></pre></td></tr></table></figure>
<br>

<h3 id="3x02-配置Locale"><a href="#3x02-配置Locale" class="headerlink" title="3x02. 配置Locale"></a>3x02. 配置<code>Locale</code></h3><p>　　1）开启自己会用到的字体，这里我开启<code>en_US.UTF-8 UTF-8</code> 、<code>zh_CN.UTF-8 UTF-8</code>和<code>zh_TW.UTF-8 UTF-8</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nano /etc/locale.gen</span><br></pre></td></tr></table></figure>


<p>　　2）接着执行<code>locale-gen</code>以生成<code>locale</code>信息，将默认语言写入配置文件<code>locale.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ locale-gen</span><br><span class="line">$ <span class="built_in">echo</span> LANG=en_US.UTF-8 &gt;&gt; locale.conf</span><br></pre></td></tr></table></figure>
<br>

<h3 id="3x03-设置时区"><a href="#3x03-设置时区" class="headerlink" title="3x03. 设置时区"></a>3x03. 设置时区</h3><p>　　这里采用上海时区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ln</span> -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>
<br>

<h3 id="3x04-设置主机名"><a href="#3x04-设置主机名" class="headerlink" title="3x04. 设置主机名"></a>3x04. 设置主机名</h3><p>　　1）虽说这里的主机名可以有大写，不过我建议大家使用常规的英文小写</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 主机名 &gt; /etc/hostname</span><br></pre></td></tr></table></figure>


<p>　　2）修改<code>/etc/hosts</code>文件的内容，把<code>&lt;hostname&gt;</code>下的<code>myhostname</code>全部替换成你所设置的主机名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nano /etc/hosts</span><br></pre></td></tr></table></figure>
<br>

<h3 id="3x05-生成初始ramdisk环境"><a href="#3x05-生成初始ramdisk环境" class="headerlink" title="3x05. 生成初始ramdisk环境"></a>3x05. 生成初始<code>ramdisk</code>环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkinitcpio -p linux</span><br></pre></td></tr></table></figure>
<br>

<h3 id="3x06-用户设置"><a href="#3x06-用户设置" class="headerlink" title="3x06. 用户设置"></a>3x06. 用户设置</h3><p>　　1）首先是设置<code>root</code>的密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ passwd</span><br></pre></td></tr></table></figure>


<p>　　2）创建一个日常用户，这里添加<code>wheel</code>用户组是为了能够使用<code>sudo</code>提权，直接<code>root</code>操作风险高</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ useradd -m -g <span class="built_in">users</span> -s /bin/bash 用户名</span><br><span class="line">$ passwd 用户名</span><br></pre></td></tr></table></figure>
<br>

<h3 id="3x07-安装grub启动器"><a href="#3x07-安装grub启动器" class="headerlink" title="3x07. 安装grub启动器"></a>3x07. 安装<code>grub</code>启动器</h3><p>　　1）首先是对于<code>BIOS</code>用户，这里推荐使用<code>GRUB</code><br>　　这三条命令分别是使用<code>pacman</code>获取<code>grub</code>，将引导信息写到<code>sda</code>，以及生成配置文件<code>grub.cfg</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S grub-bios</span><br><span class="line">$ grub-install /dev/sda</span><br><span class="line">$ grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<p>　　　对于使用<code>UEFI</code>的用户，推荐使用<code>gummiboot</code>。<br>　　　按照官方<code>wiki</code>的说法，只要你使用<code>UEFI</code>，无论如何都请安装<code>dosfstools</code>和<code>efibootmgr</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S dosfstools efibootmgr</span><br></pre></td></tr></table></figure>

<p>　　　下面安装<code>gummiboot</code>，并用其生成配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S gummiboot</span><br><span class="line">$ gummiboot --path=/boot install</span><br></pre></td></tr></table></figure>

<p>　　　接下来我们需要创建两个配置文件，并添加以下内容：<br>　　　<code>/boot/loader/entries/arch.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title          Arch Linux</span><br><span class="line">linux          /vmlinuz-linux</span><br><span class="line">initrd         /initramfs-linux.img</span><br><span class="line">options        root=/dev/sda2 rw</span><br></pre></td></tr></table></figure>
<br>

<p>　　　<code>/boot/loader/loader.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">default  <span class="built_in">arch</span></span><br><span class="line"><span class="built_in">timeout</span>  5</span><br></pre></td></tr></table></figure>

<p>　　　这些配置都很简单，请参考相关<a href="https://wiki.archlinux.org/" title="archlinux wiki">wiki</a>。<br><br></p>
<h3 id="3x08-重启系统"><a href="#3x08-重启系统" class="headerlink" title="3x08. 重启系统"></a>3x08. 重启系统</h3><p>　　1）需要退出<code>chroot</code>，卸载分区，然后直接<code>reboot</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">exit</span></span><br><span class="line">$ umount /mnt/&#123;boot,home&#125;</span><br><span class="line">$ umount /mnt</span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure>
<br>

<p>**！　如果你的机器只有无线网卡，并且你希望通过<code>wifi-menu</code>联网，那么请确保在<code>reboot</code>之前，你已经安装了<code>dialog</code>！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S wpa_supplicant dialog</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="四、桌面环境和其他软件的安装"><a href="#四、桌面环境和其他软件的安装" class="headerlink" title="四、桌面环境和其他软件的安装"></a>四、桌面环境和其他软件的安装</h2><h3 id="4x01-相关驱动安装"><a href="#4x01-相关驱动安装" class="headerlink" title="4x01. 相关驱动安装"></a>4x01. 相关驱动安装</h3><p>　　a. 安装<code>alsa</code>（声卡）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S alsa-utils</span><br></pre></td></tr></table></figure>
<br>

<p>　　b. 安装显卡驱动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ lspci | grep VGA      <span class="comment"># 查看机子显卡型号</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>由于电脑的显卡多样，请参考官方<a href="https://wiki.archlinux.org/index.php/Category:Graphics">wiki</a>进行安装适合自己电脑的显卡驱动</p>
<ul>
<li><p>Intel graphics：<a href="https://wiki.archlinux.org/index.php/Intel_graphics">Intel显卡驱动</a>　　　ATI：<a href="https://wiki.archlinux.org/index.php/ATI">ATI显卡驱动</a></p>
</li>
<li><p>NVIDIA：<a href="https://wiki.archlinux.org/index.php/NVIDIA">NVIDIA显卡驱动(闭源)</a>　　<a href="https://wiki.archlinux.org/index.php/Nouveau">Nouveau(开源)</a></p>
</li>
</ul>
<p>双显卡共用可以了解下（不建议）：<a href="https://wiki.archlinux.org/index.php/Bumblebee">Bumblebee</a>　<a href="https://wiki.archlinux.org/index.php/PRIME">PRIME</a></p>
</blockquote>
<br>

<p>　　c. 安装触摸板驱动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S xf86-input-synaptics</span><br></pre></td></tr></table></figure>

<blockquote>
<p>ps：触摸板本人一般用不到，而且经常会误触，所以不安装，大家可根据自己喜好选择！<br><br></p>
</blockquote>
<p>　　d. 安装<code>Flash</code>插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S flashplugin</span><br></pre></td></tr></table></figure>
<br>


<h3 id="4x02-gnome桌面环境安装"><a href="#4x02-gnome桌面环境安装" class="headerlink" title="4x02. gnome桌面环境安装"></a>4x02. <code>gnome</code>桌面环境安装</h3><p>　　1）<code>gnome</code>基本环境安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S gnome</span><br></pre></td></tr></table></figure>
<br>

<p>　　2）安装额外软件包<br>　　　　<code>gnome</code>有一个包合集<code>gnome-extra</code>，只不过这个包里面包含了太多没用的东西，所以不安装<br><br></p>
<p>　　3）其他杂项<br>　　设置系统启动后进入<code>GUI</code>界面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> gdm</span><br></pre></td></tr></table></figure>

<p>　　安装<code>gnome</code>附加配置，可配置插件等，开启完服务后可以删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S gnome-tweak-tool</span><br></pre></td></tr></table></figure>

<p>　　网络管理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S networkmanager</span><br></pre></td></tr></table></figure>

<p>　　启动网络连接管理器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> NetworkManager</span><br></pre></td></tr></table></figure>
<br>

<p>　　4）安装<code>gnome</code>天气插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yaourt gnome-shell-extension-weather-git</span><br></pre></td></tr></table></figure>

<p>*！　需要<code>yaourt</code>安装，并且需要在<code>gnome-tweak-tool</code>开启插件<br><br></p>
<h3 id="4x03-ibus-rime输入法"><a href="#4x03-ibus-rime输入法" class="headerlink" title="4x03. ibus-rime输入法"></a>4x03. <code>ibus-rime</code>输入法</h3><p>　　1）安装<code>ibus-rime</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S ibus-rime</span><br></pre></td></tr></table></figure>
<br>

<p>　　2）安装启动<code>ibus</code>的<code>Qt</code>应用程序支持，安装<code>Qt</code>软件库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S ibus-qt</span><br></pre></td></tr></table></figure>
<br>

<p>　　3）在<code>gnome</code>区域与语言设置里面，添加新的输入源<br><br></p>
<p>　　4）等出<code>gnome</code>，<code>Alt</code>+<code>F2</code>输入<code>r</code><br><br></p>
<p>　　5）重新登入，测试右上角的输入法图标是否显示<br><br></p>
<h3 id="4x04-安装yaourt"><a href="#4x04-安装yaourt" class="headerlink" title="4x04. 安装yaourt"></a>4x04. 安装<code>yaourt</code></h3><p>　　1）将下列内容添加到<code>/etc/pacman.conf</code>文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[archlinuxfr]</span><br><span class="line">SigLevel = Nerver</span><br><span class="line">Server = http://repo.archlinux.fr/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>
<br>

<p>　　2）安装<code>yaourt</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -Sy yaourt</span><br></pre></td></tr></table></figure>
<br>

<p>　　3）　同步源信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -Sy</span><br></pre></td></tr></table></figure>
<br>

<p>*！　用<code>yaourt</code>安装东西时不能用<code>root</code>用户和<code>sudo</code>命令<br><br></p>
<h3 id="4x05-安装chrome"><a href="#4x05-安装chrome" class="headerlink" title="4x05. 安装chrome"></a>4x05. 安装<code>chrome</code></h3><p>　　1）<code>chrome</code>存在于<code>AUR</code>仓库中，用<code>yaourt</code>搜索是否存在</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yaourt -Ss google-chrome</span><br></pre></td></tr></table></figure>
<br>

<p>　　2）用<code>yaourt</code>安装<code>chrome</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yaourt -S google-chrome</span><br></pre></td></tr></table></figure>
<br>


<h3 id="4x05-注意事项"><a href="#4x05-注意事项" class="headerlink" title="4x05. 注意事项"></a>4x05. 注意事项</h3><p>　　1）当提示某个普通用户无法使用<code>sudo</code>命令时，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ visudo</span><br></pre></td></tr></table></figure>

<p>　　要为某个用户可以执行所有命令，在配置文件中加入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">用户名   ALL=(ALL) ALL</span><br></pre></td></tr></table></figure>

<p>　　如果只想允许以某个主机名登录用户执行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">用户名   主机名=(ALL) ALL</span><br></pre></td></tr></table></figure>

<p>　　允许<code>wheel</code>用户组成员无密码使用<code>sudo</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">%wheel      ALL=(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure>

<p>　　要不询问某个用户的密码:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Defaults:USER_NAME      !authenticate</span><br></pre></td></tr></table></figure>
<br>

<p>　　2）<code>gnome</code>桌面环境下无法运行<code>Terminal</code>时，可能是以普通用户运行，并没有配置<code>Locale</code>，所以需要创建<code>/etc/locale.conf</code>并加入<code>LANG=en_US.UTF-8</code>或者在<code>gnome</code>图形界面下进入用户界面，选中语言为任意一种</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nano /etc/locale.conf</span><br></pre></td></tr></table></figure>
<br>

<p>　　3）双系统安装 Archlinux 完成后<code>reboot</code>，<code>win10</code>的引导丢失<br>　　以下是我的解决方法：<br>　　&lt;1&gt; 安装读写<code>NTFS</code>格式的工具，安装完后可对<code>NTFS</code>格式的硬盘进行写入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S ntfs-3g</span><br></pre></td></tr></table></figure>

<p>　　&lt;2&gt; 重新执行<a href="#3x07-%E5%AE%89%E8%A3%85-grub-%E5%90%AF%E5%8A%A8%E5%99%A8">3x07</a>的操作</p>
<hr>
<p><br><br></p>
<p>　更多详细教程内容，请登录<a href="https://wiki.archlinux.org/" title="archlinux wiki">archlinux wiki</a>官网进行查询！<br>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　—— end.</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　　　　—— This is all.   2016.03.20</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Install</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown常用语法</title>
    <url>/Rules/e317821c.html</url>
    <content><![CDATA[<h3 id="横线"><a href="#横线" class="headerlink" title="横线"></a>横线</h3><blockquote>
<p><code>=</code>在文字下使用会使文字出现<code>一级标题</code>效果，而自身显示<code>细横线</code>，空行下使用依然显示为<code>细横线</code><br><code>-</code>在文字下使用会使文字出现<code>二级标题</code>效果，而自身显示<code>细横线</code>，空行下如果<code>-</code>&gt; 3 则为<code>粗横线</code><br><code>*</code>和<code>_</code>个数大于3，在文字下或者空行下使用均显示为<code>粗横线</code></p>
</blockquote>
<hr>
<p><br><br></p>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>　　<code># 一级</code>、<code>## 二级</code>，其他依次类推，为了美观也可以这样：<code># 一级 #</code>、<code>## 二级 ##</code></p>
<hr>
<p><br><br></p>
<h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h3><h4 id="普通文本"><a href="#普通文本" class="headerlink" title="普通文本"></a>普通文本</h4><p>　　这是一段直接输入的普通文本<br><br></p>
<h4 id="单行文本"><a href="#单行文本" class="headerlink" title="单行文本"></a>单行文本</h4><p>　　在一行开头加入1个Tab或者4个空格</p>
<pre><code> 这是一段单行文本
</code></pre>
<br>

<h4 id="多行文本"><a href="#多行文本" class="headerlink" title="多行文本"></a>多行文本</h4><p>　　语法一：在连续几行文本开头加入1个Tab或者4个空格<br>　　语法二：使用一对各3个的反引号，该语法也可以实现代码高亮</p>
<pre><code> 这是一段多行文本的第一行
 这是一段多行文本的第二行
</code></pre>
<br>

<h4 id="文字高亮"><a href="#文字高亮" class="headerlink" title="文字高亮"></a>文字高亮</h4><p>　　文字高亮功能可以使行内部文字高亮，比较适合做一篇博文的 Tag 效果，使用一对（反引号`）即可<br>　　效果展示：<code>fuck the world</code><br><br></p>
<h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><blockquote>
<p>a.　直接回车不能换行，可以在上一行文本后补两个空格，实现换行<br>b.　Markdown语法支持部分 html 标签，可使用<code>&lt;br&gt;</code>、<code>&lt;br/&gt;</code>换行</p>
</blockquote>
<br>

<h4 id="斜体、粗体、删除线"><a href="#斜体、粗体、删除线" class="headerlink" title="斜体、粗体、删除线"></a>斜体、粗体、删除线</h4><table>
<thead>
<tr>
<th align="center"><strong>语法</strong></th>
<th align="center"><strong>效果</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>*斜体*</code>、<code>_斜体_</code></td>
<td align="center"><em>斜体</em></td>
</tr>
<tr>
<td align="center"><code>**粗体**</code>、<code>__粗体__</code></td>
<td align="center"><strong>粗体</strong></td>
</tr>
<tr>
<td align="center"><code>~~删除线~~</code></td>
<td align="center"><del>删除线</del></td>
</tr>
<tr>
<td align="center"><code>~~***斜粗删组合***~~</code></td>
<td align="center"><del><em><strong>斜粗删组合</strong></em></del></td>
</tr>
</tbody></table>
<p><br><br></p>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><h4 id="文字链接"><a href="#文字链接" class="headerlink" title="文字链接"></a>文字链接</h4><blockquote>
<p>法一：<code>[alt](url &quot;title&quot;)</code></p>
<blockquote>
<p>法　<code>[alt][xxx]</code><br>二　<code>[xxx]:url &quot;title&quot;</code></p>
<blockquote>
<ul>
<li>alt　表示替换掉链接所显示的文本</li>
<li>title　表示鼠标悬停在 alt 时显示的文本(可省略)</li>
<li>url　点击进行跳转的超链接,可以是内链接也可以是外链接</li>
<li>xxx　只充当一个标识符，通常第一句占位，第二句放句末便于管理</li>
</ul>
</blockquote>
</blockquote>
</blockquote>
<br>

<h4 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h4><p>　　用法与文字链接一样，区别是前面多了一个<code>!</code>，而且不能进行跳转</p>
<blockquote>
<p>基本格式：<code>![alt](url &quot;title&quot;)</code></p>
<blockquote>
<p>法　<code>![alt][xxx]</code><br>二　<code>[xxx]:url &quot;title&quot;</code></p>
<blockquote>
<ul>
<li>alt　表示图片加载失败时的替换文本(可省略)</li>
<li>title　表示鼠标悬停在图片时显示的文本(可省略)</li>
<li>url　点击进行跳转的超链接,可以是内链接也可以是外链接</li>
<li>xxx　只充当一个标识符，通常第一句占位，第二句放句末便于管理</li>
</ul>
</blockquote>
</blockquote>
</blockquote>
<br>

<h4 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h4><p>　　本文的目录就是用锚点进行捆绑的，和HTML的锚点<code>#标记</code>类似</p>
<table>
<thead>
<tr>
<th align="center">语法</th>
<th align="center">效果</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>[跳到复选框列表](#复选框列表)</code></td>
<td align="center"><a href="#%E5%A4%8D%E9%80%89%E6%A1%86%E5%88%97%E8%A1%A8">跳到复选框列表</a></td>
</tr>
</tbody></table>
<p><br><br></p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><blockquote>
<ul>
<li><code>* 嘿嘿</code></li>
</ul>
<ul>
<li><code>- 呵呵</code></li>
</ul>
<ul>
<li><code>* 哈哈</code></li>
</ul>
</blockquote>
<br>

<h4 id="多级无序列表"><a href="#多级无序列表" class="headerlink" title="多级无序列表"></a>多级无序列表</h4><p>　　最高级别顶格<code>*</code>，级别往下依次加一个Tab或4个空格的距离</p>
<blockquote>
<ul>
<li><code>* 级别最高</code><ul>
<li><code>* 级别其次</code></li>
<li><code>* 级别其次</code><ul>
<li><code>* 级别最低</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<br>

<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>　　就是在数字后面加一个点，再加一个空格，不过看起来起来可能不够明显<br><br></p>
<h4 id="有序列表自动排序"><a href="#有序列表自动排序" class="headerlink" title="有序列表自动排序"></a>有序列表自动排序</h4><p>　　在第一行指定<code>1.</code>，接下来的几行用星号<code>*</code>，或者继续用数字<code>1.</code>，它会自动显示成<code>2.</code>、<code>3.</code>、<code>4.</code>，接着上一个数字往下自动添加序号<br><br></p>
<h4 id="复选框列表"><a href="#复选框列表" class="headerlink" title="复选框列表"></a>复选框列表</h4><p>　　-　通常用于标注某个项目各项任务完成情况（显示效果与编辑器有关，不同工具显示不一样）<br>语法：<code>- [x] 需求分析</code>、<code>- [ ] 系统设计</code></p>
<blockquote>
<p>&amp;#9745; 需求分析（GitHub<code>&amp;#9745;</code>）<br>&amp;#9744; 系统设计（GitHub<code>&amp;#9744;</code>）</p>
</blockquote>
<blockquote>
<ul>
<li><input checked="" disabled="" type="checkbox"> 详细设计（一般工具<code>- [x]</code>）</li>
<li><input disabled="" type="checkbox"> 编码（一般工具<code>- [ ]</code>）</li>
</ul>
</blockquote>
<p>Tip：在 Github 的<em><strong>issues</strong></em>中使用该语法可以实时点击复选框来勾选或解除勾选,而无需修改<em><strong>issues</strong></em>原文<br><br><br></p>
<h3 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h3><h4 id="块引用的多级结构"><a href="#块引用的多级结构" class="headerlink" title="块引用的多级结构"></a>块引用的多级结构</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">生物</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt; 动物</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; 人类</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt;&gt; 小妹妹</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>生物</p>
<blockquote>
<p>动物</p>
<blockquote>
<p>人类</p>
<blockquote>
<p>小妹妹</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p><br><br></p>
<h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><blockquote>
<p>```java<br>public static oid main(String[] args){}<br>```</p>
</blockquote>
<p>​	在3个反引号后面加上编程语言的名称，另起一行开始写代码，最后一行再加上3个反引号</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> oid <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;&#125;    <span class="comment">//java</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> atgc, <span class="type">char</span> *argv[])</span>    <span class="comment">//c</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello, markdown&quot;</span>    //bash</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myH1&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;Welcome to my Homepage&quot;</span>;    <span class="comment">//javascript</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string &amp;<span class="keyword">operator</span>+(<span class="type">const</span> string&amp; A, <span class="type">const</span> string&amp; B)    <span class="comment">//cpp</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>　　表格展示及语法：</p>
<table>
<thead>
<tr>
<th align="center">语法1</th>
<th align="center">语法2</th>
</tr>
</thead>
<tbody><tr>
<td align="center">表头1|表头2</td>
<td align="center">|表头1|表头2|</td>
</tr>
<tr>
<td align="center">- - - - - |- - - - -</td>
<td align="center">|- - - - -|- - - - -|</td>
</tr>
<tr>
<td align="center">表格单元|表格单元</td>
<td align="center">|表格单元|表格单元|</td>
</tr>
<tr>
<td align="center">表格单元|表格单元</td>
<td align="center">|表格单元|表格单元|</td>
</tr>
</tbody></table>
<p><strong>对齐方式：</strong><br>中对齐,右对齐,左对齐：<code>:----:|----:|:----</code><br>左对齐,中对齐,右对齐：<code>|:----|:-----:|-----:|</code><br><br></p>
<p><strong>表格嵌入其他语法</strong></p>
<p>　　表格还可以嵌入其他语法,如对文字的设置、表格嵌入图片、链接等其他内容，此处不作演示</p>
<hr>
<p><br><br></p>
<blockquote>
<p>Tips：<code>createTime</code>：2016.08.07　18:02:10</p>
</blockquote>
]]></content>
      <categories>
        <category>Rules</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>「Scrapy」爬虫过程中避免被禁的几个小方法</title>
    <url>/Technique/8cd17fc.html</url>
    <content><![CDATA[<h3 id="0x01-动态设置-UserAgent"><a href="#0x01-动态设置-UserAgent" class="headerlink" title="0x01. 动态设置 UserAgent"></a>0x01. 动态设置 UserAgent</h3><blockquote>
<p>通过不停地切换<code>UserAgent</code> ，模拟使用不同的浏览器访问</p>
</blockquote>
<p>推荐使用<a href="https://github.com/hellysmile/fake-useragent"><code>fake-useragent</code></a>，为我们提供了众多的<code>UserAgent</code>，而且使用方法也简单<br><br></p>
<h4 id="a-安装fake-useragent"><a href="#a-安装fake-useragent" class="headerlink" title="a. 安装fake-useragent"></a>a. 安装<code>fake-useragent</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install fake-useragent        <span class="comment"># fake-useragent详细用法可查阅Github上的文档</span></span><br></pre></td></tr></table></figure>
<br>



<h4 id="b-添加middleware"><a href="#b-添加middleware" class="headerlink" title="b. 添加middleware"></a>b. 添加<code>middleware</code></h4><p>添加下面内容到<code>middlewares.py</code>，主要是重写<code>process_request()</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 动态设置UserAgent，可自定义浏览器类型，如chrome、firefox等，需要在settings.py中设置，不设置默认会返回random</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RandomUserAgentMiddlewares</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, crawler</span>):</span><br><span class="line">        self.ua = UserAgent()</span><br><span class="line">        self.ua_type = crawler.settings.get(<span class="string">&#x27;RANDOM_UA_TYPE&#x27;</span>, <span class="string">&#x27;random&#x27;</span>)        <span class="comment"># 自定义获取的浏览器类型</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">from_crawler</span>(<span class="params">cls, crawler</span>):</span><br><span class="line">        <span class="keyword">return</span> cls(crawler)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_request</span>(<span class="params">self, request, spider</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">get_ua</span>():</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(self.ua, self.ua_type)</span><br><span class="line">        request.headers.setdefault(<span class="string">&#x27;User-Agent&#x27;</span>, get_ua())</span><br></pre></td></tr></table></figure>

<p>在<code>settings.py</code>中关闭默认的<code>UserAgentMiddleware</code>，启用自定义的<code>RandomUserAgentMiddlewares</code>，并设置<code>fake-useragent</code>默认的<code>UserAgent</code>类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class="line">    <span class="string">&#x27;scrapy.downloadermiddlewares.useragent.UserAgentMiddleware&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">&#x27;tutorial.middlewares.RandomUserAgentMiddlewares&#x27;</span>: <span class="number">543</span>,</span><br><span class="line">&#125;</span><br><span class="line">RANDOM_UA_TYPE = <span class="string">&#x27;chrome&#x27;</span>        <span class="comment"># 左边的key是自定义的，能配合middlewares中的参数获取即可</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h3 id="0x02-禁用Cookie"><a href="#0x02-禁用Cookie" class="headerlink" title="0x02. 禁用Cookie"></a>0x02. 禁用Cookie</h3><blockquote>
<p>在<code>settings.py</code>中禁用<code>cookie</code>，部分免登陆的网站会在<code>cookie</code>中做标记，判断是否是爬虫</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">COOKIES_ENABLED = <span class="literal">False</span>            <span class="comment"># 在spider中直接设置也可以</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h3 id="0x03-设置延迟下载"><a href="#0x03-设置延迟下载" class="headerlink" title="0x03. 设置延迟下载"></a>0x03. 设置延迟下载</h3><blockquote>
<p>在从同一网站下载连续页面之前应等待的时间</p>
</blockquote>
<p>同样是修改<code>settings.py</code>，设置延迟下载，尽量地模拟人工操作</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DOWNLOAD_DELAY = <span class="number">3</span>            <span class="comment"># 在spider中直接设置也可以</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h3 id="0x04-动态-ip-代理"><a href="#0x04-动态-ip-代理" class="headerlink" title="0x04. 动态 ip 代理"></a>0x04. 动态 ip 代理</h3><blockquote>
<p>网站常用的反爬虫就是封 ip 一段时间，所以我们可以设置动态的 ip 代理解决</p>
</blockquote>
<p>跟<a href="#b-%E6%B7%BB%E5%8A%A0-middleware">0x01.b</a>差不多，添加<code>middleware</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RandomProxyMiddlewares</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_request</span>(<span class="params">self, request, spider</span>):</span><br><span class="line">        proxy = rq.get(<span class="string">&#x27;http://localhost:5000/api&#x27;</span>).text    <span class="comment"># 这是我自己的接口，请求成功直接返回代理 39.104.75.54:8080</span></span><br><span class="line">        request.meta[<span class="string">&#x27;proxy&#x27;</span>] = <span class="string">&#x27;http://&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(proxy)</span><br></pre></td></tr></table></figure>

<p>在<code>settings.py</code>中启用<code>MIDDLEWARES</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class="line">    <span class="comment"># &#x27;tutorial.middlewares.RandomUserAgentMiddlewares&#x27;: 543,</span></span><br><span class="line">    <span class="comment"># &#x27;scrapy.downloadermiddlewares.useragent.UserAgentMiddleware&#x27;: None,</span></span><br><span class="line">    <span class="string">&#x27;tutorial.middlewares.RandomProxyMiddlewares&#x27;</span>: <span class="number">544</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<blockquote>
<p>到这里就没啦，贴一下 scrapy 官网提供的方法：<a href="https://doc.scrapy.org/en/master/topics/practices.html#avoiding-getting-banned">avoiding-getting-banned</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Technique</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建个人静态博客到GitPages</title>
    <url>/Technique/2d7e24e8.html</url>
    <content><![CDATA[<p>这是 18 年在Archlinux上的安装步骤，现在使用的是Windows10，做少量修改和补充，大致原理还是一样。<span id="more"></span>之前使用的是<a href="https://github.com/iissnan/hexo-theme-next">iissnan&#x2F;hexo-theme-next</a>，现在更换为<a href="https://github.com/theme-next/hexo-theme-next">theme-next&#x2F;hexo-theme-next</a></p>
<h2 id="一、安装准备"><a href="#一、安装准备" class="headerlink" title="一、安装准备"></a>一、安装准备</h2><h3 id="1x01-安装npm"><a href="#1x01-安装npm" class="headerlink" title="1x01.  安装npm"></a>1x01.  安装<code>npm</code></h3><p>​	不晓得是不是得装<code>Node.js</code>，我就不瞎折腾了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S npm    <span class="comment"># npm install cnpm -g --registry=https://registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure>
<br>

<h3 id="1x02-安装hexo"><a href="#1x02-安装hexo" class="headerlink" title="1x02.  安装hexo"></a>1x02.  安装<code>hexo</code></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo npm install -g hexo-cli        <span class="comment"># sudo cnpm install -g hexo-cli</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="二、建立网站"><a href="#二、建立网站" class="headerlink" title="二、建立网站"></a>二、建立网站</h2><h3 id="2x01-初始化hexo"><a href="#2x01-初始化hexo" class="headerlink" title="2x01.  初始化hexo"></a>2x01.  初始化<code>hexo</code></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo hexo init ./Github/cdd233.github.io    <span class="comment"># 根据自己github repository存储在本地存放的位置更改</span></span><br><span class="line">$ <span class="built_in">cd</span> ./Github/cdd233.github.io/</span><br><span class="line">$ sudo npm install</span><br></pre></td></tr></table></figure>

<p>生成的树状目录如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml     # 网站的配置信息</span><br><span class="line">├── package.json    # 应用程序的信息</span><br><span class="line">├── scaffolds       # 模版文件夹，新建文章时，Hexo会根据scaffold来建立文件</span><br><span class="line">├── source          # 存放用户的资源文件</span><br><span class="line">|   ├── _drafts     # 除 _posts 外， _ 开头的文件/文件夹和隐藏的文件都会被忽略</span><br><span class="line">|   └── _posts        # 用户写的文章都会存放在这</span><br><span class="line">└── themes          # 存放主题，Hexo会根据主题来生成静态页面</span><br></pre></td></tr></table></figure>
<br>

<h3 id="2x02-测试网站"><a href="#2x02-测试网站" class="headerlink" title="2x02. 测试网站"></a>2x02. 测试网站</h3><p>在本地启动一个服务，不指定<code>port</code>会默认启动<code>4000</code>端口，<code>s</code>为<code>server</code>的简写<br>浏览器打开链接即可看到默认主题效果，接下来就是个性化配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo hexo s -p 5000        <span class="comment"># http://localhost:5000/</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="三、个性化设置"><a href="#三、个性化设置" class="headerlink" title="三、个性化设置"></a>三、个性化设置</h2><h3 id="3x01-Next主题配置"><a href="#3x01-Next主题配置" class="headerlink" title="3x01. Next主题配置"></a>3x01. Next主题配置</h3><h4 id="a-下载Next主题"><a href="#a-下载Next主题" class="headerlink" title="a. 下载Next主题"></a>a. 下载Next主题</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes</span><br><span class="line">$ sudo git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next.git ./next</span><br></pre></td></tr></table></figure>
<br>

<h4 id="b-在网站根目录下的-config-yml中更换主题为Next"><a href="#b-在网站根目录下的-config-yml中更换主题为Next" class="headerlink" title="b. 在网站根目录下的_config.yml中更换主题为Next"></a>b. 在<code>网站根目录</code>下的<code>_config.yml</code>中更换主题为Next</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">themes: next</span><br></pre></td></tr></table></figure>
<br>

<h4 id="c-设置文章默认不展开全部，只抽取120个字做摘要，主题配置文件"><a href="#c-设置文章默认不展开全部，只抽取120个字做摘要，主题配置文件" class="headerlink" title="c. 设置文章默认不展开全部，只抽取120个字做摘要，主题配置文件"></a>c. 设置文章默认不展开全部，只抽取120个字做摘要，<code>主题配置文件</code></h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: <span class="number">120</span></span><br></pre></td></tr></table></figure>
<br>

<h4 id="d-右下角置顶图标显示滑动条百分比进度，主题配置文件"><a href="#d-右下角置顶图标显示滑动条百分比进度，主题配置文件" class="headerlink" title="d. 右下角置顶图标显示滑动条百分比进度，主题配置文件"></a>d. 右下角置顶图标显示滑动条百分比进度，<code>主题配置文件</code></h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">scrollpercent: true</span><br></pre></td></tr></table></figure>
<br>

<p>ps： 其他零零碎碎的感觉写完也得写大半天，官网写得也很详细，下面只记录几个常用的就好…<br><br><br></p>
<h3 id="3x02-一些还不错的配置"><a href="#3x02-一些还不错的配置" class="headerlink" title="3x02. 一些还不错的配置"></a>3x02. 一些还不错的配置</h3><blockquote>
<p>Tips：在大天朝如果感觉<code>npm</code>访问速度慢的话，可以再安装淘宝家的<code>cnpm</code>，替换<code>npm</code>使用</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install cnpm -g --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<br>

<h4 id="a-Local-Search"><a href="#a-Local-Search" class="headerlink" title="a. Local Search"></a>a. Local Search</h4><p>需要在<code>网站根目录</code>安装，然后在<code>主题配置文件</code>中配置，即 Next 主题中的配置文件<code>_config.yml</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo npm install hexo-generator-searchdb --save        <span class="comment"># sudo cnpm install hexo-generator-searchdb --save</span></span><br></pre></td></tr></table></figure>
<br>

<h4 id="b-来必力评论系统"><a href="#b-来必力评论系统" class="headerlink" title="b. 来必力评论系统"></a>b. 来必力评论系统</h4><p>直接登录 <a href="http://www.laibili.com.cn/">来必力官网</a>，注册帐号开个页面，然后把<code>uid</code>拿回来丢到<code>主题配置文件</code>中即可 </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">livere_uid: <span class="number">7</span>f5391632a2331b1aa5508ddxxxxxxxxx</span><br></pre></td></tr></table></figure>
<br>

<h4 id="c-文章设置密码访问"><a href="#c-文章设置密码访问" class="headerlink" title="c. 文章设置密码访问"></a>c. 文章设置密码访问</h4><p>​		把<code>&lt;script&gt;</code>中的代码复制到<code>themes/next/layout/_partials/head.swig</code>中，然后在文章头添加<code>password：xxx</code>即可给该文章设置访问密码，不添加或为空时表示不加密；代码中的网址了解一下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">prompt</span>(<span class="string">&#x27;请输入文章密码&#x27;</span>) !== <span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">                <span class="title function_">alert</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">                <span class="keyword">if</span>(history.<span class="property">length</span>==<span class="number">1</span>)</span><br><span class="line">                    location.<span class="title function_">replace</span>(<span class="string">&quot;http://saltedfish.org&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    history.<span class="title function_">back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<br>

<h4 id="d-给鼠标添加爱心点击特效"><a href="#d-给鼠标添加爱心点击特效" class="headerlink" title="d. 给鼠标添加爱心点击特效"></a>d. 给鼠标添加爱心点击特效</h4><p>​		添加<a href="https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js">love.js</a>文件到<code>/themes/next/source/js/</code>，在<code>\themes\next\layout\_layout.swig</code>末尾处添加代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/love.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<br>

<h4 id="e-文章添加阴影特效"><a href="#e-文章添加阴影特效" class="headerlink" title="e. 文章添加阴影特效"></a>e. 文章添加阴影特效</h4><p>​		把下面代码添加到<code>themes/next/source/css/_custom/custom.styl</code>中即可</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, .<span class="number">5</span>);</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>

<h4 id="f-设置文章内链接颜色样式（默认显示蓝色，鼠标放上去显示橙色）"><a href="#f-设置文章内链接颜色样式（默认显示蓝色，鼠标放上去显示橙色）" class="headerlink" title="f.  设置文章内链接颜色样式（默认显示蓝色，鼠标放上去显示橙色）"></a>f.  设置文章内链接颜色样式（默认显示蓝色，鼠标放上去显示橙色）</h4><p>选择<code>.post-body</code>是为了不影响标题，选择<code>p</code>是为了不影响首页“阅读全文”的显示样式</p>
<p>添加内容到文件<code>themes\next\source\css\_common\components\post\post.styl</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">0.1px</span> solid <span class="number">#0593d3</span>;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">0.1px</span> solid <span class="number">#fc6423</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>

<h4 id="g-给文章设置一个固定永久链接（编号）"><a href="#g-给文章设置一个固定永久链接（编号）" class="headerlink" title="g. 给文章设置一个固定永久链接（编号）"></a>g. 给文章设置一个固定永久链接（编号）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo npm install hexo-abbrlink --save    <span class="comment"># 安装hexo-abbrlink</span></span><br></pre></td></tr></table></figure>
<br>

<h4 id="h-恶搞网站Title"><a href="#h-恶搞网站Title" class="headerlink" title="h. 恶搞网站Title"></a>h. 恶搞网站Title</h4><p>​		创建文件<code>title-cheat.js</code>，添加以下代码，然后移动到<code>/themes/next/source/js/</code>下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/img/TEP.ico&quot;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;╭(°A°`)╮ 页面崩溃啦 ~ &#x27;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/favicon.ico&quot;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;(ฅ&gt;ω&lt;*ฅ) 嘿嘿又好了 ~ &#x27;</span> + <span class="title class_">OriginTitile</span>;</span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitile</span>;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>在<code>/themes/next/layout/_layout.swig</code>中引入以下代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/title-cheat.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<br>

<h4 id="i-添加在线联系功能（类似网页客服）"><a href="#i-添加在线联系功能（类似网页客服）" class="headerlink" title="i. 添加在线联系功能（类似网页客服）"></a>i. 添加在线联系功能（类似网页客服）</h4><p>ix01. 打开<code>/themes/next/layout/_partials/head.swig</code>，随便找个位置粘贴下面的代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.<span class="property">daovoice</span> %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (<span class="keyword">function</span>(<span class="params">i,s,o,g,r,a,m</span>)&#123;i[<span class="string">&quot;DaoVoiceObject&quot;</span>]=r;i[r]=i[r]||<span class="keyword">function</span>(<span class="params"></span>)&#123;(i[r].<span class="property">q</span>=i[r].<span class="property">q</span>||[]).<span class="title function_">push</span>(<span class="variable language_">arguments</span>)&#125;,i[r].<span class="property">l</span>=<span class="number">1</span>*<span class="keyword">new</span> <span class="title class_">Date</span>();a=s.<span class="title function_">createElement</span>(o),m=s.<span class="title function_">getElementsByTagName</span>(o)[<span class="number">0</span>];a.<span class="property">async</span>=<span class="number">1</span>;a.<span class="property">src</span>=g;a.<span class="property">charset</span>=<span class="string">&quot;utf-8&quot;</span>;m.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(a,m)&#125;)(<span class="variable language_">window</span>,<span class="variable language_">document</span>,<span class="string">&quot;script&quot;</span>,(<span class="string">&#x27;https:&#x27;</span> == <span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">protocol</span> ? <span class="string">&#x27;https:&#x27;</span> : <span class="string">&#x27;http:&#x27;</span>) + <span class="string">&quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;</span>,<span class="string">&quot;daovoice&quot;</span>)</span><br><span class="line">  <span class="title function_">daovoice</span>(<span class="string">&#x27;init&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">app_id</span>: <span class="string">&quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="title function_">daovoice</span>(<span class="string">&#x27;update&#x27;</span>);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<br>

<p>ix02. 点击<a href="http://dashboard.daovoice.io/get-started?invite_code=591a4b70">DaoVoice官网</a>进行注册，提取网站给的<code>app_id</code>，打开<code>主题配置文件</code>，加入下面代码，把<code>app_id</code>替换进去</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Online contact</span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: &#123;your app_id&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果没什么错误，网站右下角会出现一个聊天图标，但是这时候我们会发现，它把我们网页中部分按钮给遮挡住了！其实在官网设置一下聊天窗口样式就好了，具体路径：<code>应用设置 &gt; 聊天设置</code>，找不到记得往下拉一点</p>
</blockquote>
<br>


<h4 id="j-简化测试与部署等操作（纯个人习惯）"><a href="#j-简化测试与部署等操作（纯个人习惯）" class="headerlink" title="j. 简化测试与部署等操作（纯个人习惯）"></a>j. 简化测试与部署等操作（纯个人习惯）</h4><p>在<code>package.json</code>中添加多个合并的操作命令</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;local&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>远程部署：<code>sudo npm run deploy</code></p>
<p>本地调试：<code>sudo npm run local</code></p>
</blockquote>
<p><br><br></p>
<h2 id="四、部署到Github"><a href="#四、部署到Github" class="headerlink" title="四、部署到Github"></a>四、部署到Github</h2><h4 id="a-在Github上创建一个repository，命名为-lt-uesr-gt-github-io"><a href="#a-在Github上创建一个repository，命名为-lt-uesr-gt-github-io" class="headerlink" title="a. 在Github上创建一个repository，命名为&lt;uesr&gt;.github.io"></a>a. 在<a href="https://github.com/">Github</a>上创建一个<code>repository</code>，命名为<code>&lt;uesr&gt;.github.io</code></h4><br>

<h4 id="b-为Hexo安装git插件，并-在站点配置文件中加入以下配置-，即网站根目录下的-config-yml"><a href="#b-为Hexo安装git插件，并-在站点配置文件中加入以下配置-，即网站根目录下的-config-yml" class="headerlink" title="b. 为Hexo安装git插件，并 在站点配置文件中加入以下配置 ，即网站根目录下的_config.yml"></a>b. 为Hexo安装git插件，并 在<code>站点配置文件</code>中加入以下配置 ，即<code>网站根目录</code>下的<code>_config.yml</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo npm install hexo-deployer-git --save        <span class="comment"># sudo cnpm install hexo-deployer-git --save	</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/cdd233/cdd233.github.io.git    # 根据自己的改</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<br>

<h4 id="c-生成静态文件并部署到Github"><a href="#c-生成静态文件并部署到Github" class="headerlink" title="c. 生成静态文件并部署到Github"></a>c. 生成静态文件并部署到Github</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo hexo clean            <span class="comment"># 清除缓存</span></span><br><span class="line">$ sudo hexo g                <span class="comment"># 生成静态文件，可以部署之前`sudo gulp`，压缩渲染完的文件（步骤ax01）</span></span><br><span class="line">$ sudo hexo d                <span class="comment"># 部署到Github</span></span><br></pre></td></tr></table></figure>
<br>

<h4 id="d-绑定域名"><a href="#d-绑定域名" class="headerlink" title="d. 绑定域名"></a>d. 绑定域名</h4><p>​		1. 不绑定默认会使用<code>https://&lt;user&gt;.github.io</code>，在站点<code>source</code>文件中添加<code>CNAME</code>文件，并在里面写入你的域名，例如：<code>saltedfish.org</code>；或者直接在<a href="https://github.com/">Github</a>的<code>repository</code>中添加该文件</p>
<p>​		2. 在解析域名服务中添加一条<code>CNAME</code>记录，比如我的是在腾讯云解析的，添加一条<code>CNAME</code>记录，让它指向<code>GitPages</code>的默认域名<br><br><br></p>
<ul>
<li>Hexo官网： <a href="https://hexo.io/zh-cn/docs/index.html">https://hexo.io/zh-cn/docs/index.html</a></li>
<li>Next官网：<a href="http://theme-next.iissnan.com/getting-started.html">http://theme-next.iissnan.com/getting-started.html</a></li>
</ul>
]]></content>
      <categories>
        <category>Technique</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL常用语法</title>
    <url>/Rules/59fbd90c.html</url>
    <content><![CDATA[<p>DDL：Data Definition Language	 数据定义语言<br>DML：Data Manipulation Language	数据操纵语言</p>
<hr>
<p><br><br></p>
<h2 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h2><table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
<th align="center">表级约束</th>
<th align="center">列级约束</th>
</tr>
</thead>
<tbody><tr>
<td align="center">UNIQUE KEY</td>
<td align="center">唯一</td>
<td align="center">UNIQUE(name);</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">PRIMARY KEY</td>
<td align="center">主键</td>
<td align="center">PRIMARY KEY(name);</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">NOT NULL</td>
<td align="center">非空</td>
<td align="center">NOT NULL(name,sex);</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">CHECK</td>
<td align="center">检查</td>
<td align="center">CHECK(sex&#x3D;’男’ OR sex&#x3D;’女’);</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">FOREIGN KEY</td>
<td align="center">外键</td>
<td align="center">FOREIGN KEY(tb_id) REFERENCES tb_2(id);</td>
<td align="center">tb_id INT REFERENCES tb_2(id);</td>
</tr>
</tbody></table>
<p><br><br></p>
<h2 id="联合约束"><a href="#联合约束" class="headerlink" title="联合约束"></a>联合约束</h2><ul>
<li>联合唯一</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UNIQUE</span>(name, id);            # 以 name 和 id 作为一个整体，再约束其整体为唯一</span><br></pre></td></tr></table></figure>

<ul>
<li>联合主键</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">PRIMARY</span> KEY(name, id);            # 以 name 和 id 作为一个整体，再约束其整体为主键</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="ALTER"><a href="#ALTER" class="headerlink" title="ALTER"></a>ALTER</h2><ul>
<li>增加主键</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(id);</span><br></pre></td></tr></table></figure>
<ul>
<li>增加主键并自定义约束名为 tb_1_pk</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span>S tb_1_pk <span class="keyword">PRIMARY</span> KEY(id);</span><br></pre></td></tr></table></figure>

<ul>
<li>增加外键，从表 tb_1 中字段 tb_id 添加 主表 tb_2 中字段 id 为外键</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 <span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> KEY(tb_id) <span class="keyword">REFERENCES</span> tb_2(id);</span><br></pre></td></tr></table></figure>

<ul>
<li>删除约束名为 tb_1_pk 的约束条件</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 <span class="keyword">DROP</span> CONSTRAINTS  tb_1_pk;</span><br></pre></td></tr></table></figure>

<ul>
<li>禁用约束名为 tb_1_pk 的约束条件</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 DISABLE CONSTRAINTS  tb_1_pk;</span><br></pre></td></tr></table></figure>

<ul>
<li>激活约束名为 tb_1_pk 的约束条件</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 ENABLE CONSTRAINTS  tb_1_pk;</span><br></pre></td></tr></table></figure>


<ul>
<li>添加列</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 <span class="keyword">ADD</span> column_name <span class="type">INT</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>删除列</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> column_name;</span><br></pre></td></tr></table></figure>

<ul>
<li>修改列</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 CHANGE column_old column_new <span class="type">INT</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>重命名表</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 tb_2;</span><br></pre></td></tr></table></figure>

<ul>
<li>添加索引</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 <span class="keyword">ADD</span> INDEX index_name (name,sex);</span><br></pre></td></tr></table></figure>

<ul>
<li>删除索引</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_1 <span class="keyword">DROP</span> INDEX index_name;</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="约束相关的数据字典"><a href="#约束相关的数据字典" class="headerlink" title="约束相关的数据字典"></a>约束相关的数据字典</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> user_constraints <span class="keyword">WHERE</span> table_name <span class="operator">=</span> <span class="string">&#x27;TEST&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> user_cons_columns <span class="keyword">WHERE</span> table_name <span class="operator">=</span> <span class="string">&#x27;TEST&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>a.　<code>DELETE</code>　　　–DML　配合 <code>where</code> 条件约束删除数据，可以 <code>ROLLBACK</code>   ，保留表结构，速度最慢<br>b.　<code>TRUNCATE</code>　　–DDL　<code>TRUNCATE</code> 是截断表的所有数据(格式化表)，不能 <code>ROLLBACK</code> ，保留表结构，速度较快<br>c.　<code>DROP</code>　　　　–DDL　删除表结构及表的所有数据，不能 <code>ROLLBACK</code> ，不保留表结构，速度最快<br><br><br></p>
<h2 id="DISTUNCT"><a href="#DISTUNCT" class="headerlink" title="DISTUNCT"></a>DISTUNCT</h2><p>　　-　从返回的结果集中去除重复项</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DISTUNCT name <span class="keyword">FROM</span> tb_1;            # 去除 name 的重复项再展示查询结果</span><br><span class="line"><span class="keyword">SELECT</span> DISTUNCT name, sex <span class="keyword">FROM</span> tb_1;        # 去除 name 和 sex 作为一个整体的重复项再展示查询结果</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="BETWEEN-AND"><a href="#BETWEEN-AND" class="headerlink" title="BETWEEN .. AND .."></a>BETWEEN .. AND ..</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_1 <span class="keyword">WHERE</span> num <span class="keyword">BETWEEN</span> <span class="number">800</span> <span class="keyword">AND</span> <span class="number">1600</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_1 <span class="keyword">WHERE</span> num <span class="operator">&gt;=</span> <span class="number">800</span> <span class="keyword">AND</span> num <span class="operator">&lt;=</span> <span class="number">1600</span>;</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="IN"><a href="#IN" class="headerlink" title="IN"></a>IN</h2><p>　　-　在列出的值中使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_1 <span class="keyword">WHERE</span> num <span class="operator">=</span> <span class="number">30</span> <span class="keyword">OR</span> num <span class="operator">=</span> <span class="number">40</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_1 <span class="keyword">WHERE</span> num <span class="keyword">IN</span> (<span class="number">30</span>,<span class="number">40</span>);</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="LIKE"><a href="#LIKE" class="headerlink" title="LIKE"></a>LIKE</h2><p>　　-　模糊查询　　<code>%</code> (适配全部字符)　　<code>_</code> (适配单个字符)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_1 <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;_A%&#x27;</span>;        # 查询 tb_1 表中 name 第二个字符为 A 的所有信息</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="IS-NULL"><a href="#IS-NULL" class="headerlink" title="IS NULL"></a>IS NULL</h2><p>　　-　查询空值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_1 <span class="keyword">WHERE</span> NAME <span class="keyword">IS</span> <span class="keyword">NULL</span>;        # 查询 tb_1 表中 name 为空值的所有信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_1 <span class="keyword">WHERE</span> NAME <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;        # 这种写法是错误的</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">NOT</span> <span class="operator">&gt;</span> <span class="keyword">AND</span> <span class="operator">&gt;</span> <span class="keyword">OR</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="ORDER-BY子句"><a href="#ORDER-BY子句" class="headerlink" title="ORDER BY子句"></a>ORDER BY子句</h2><p>　　-　结果排序　ASC表示升序　DESC表示降序　默认为升序</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_1 <span class="keyword">ORDER</span> <span class="keyword">BY</span> num <span class="keyword">DESC</span>;        # 查询 tb_1 表中的所有信息，并按照 num 的降序将结果展示出来</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>　　-　聚合函数都会忽略NULL值</p>
<ul>
<li>COUNT( )　　　-　统计行数</li>
<li>SUM( ) 　　　　-　求和</li>
<li>AVG( )　 　　 　-　平均值</li>
<li>MAX( )　　　 　-　最大值</li>
<li>MIN( )　 　　 　-　最小值<br><br><br></li>
</ul>
<h2 id="GROUP-BY-分组"><a href="#GROUP-BY-分组" class="headerlink" title="GROUP BY  分组"></a>GROUP BY  分组</h2><p>　　-　其真正的作用在于与各种组函数结合使用，用来对查询出来的数据进行分组</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> deptno, <span class="built_in">COUNT</span>(<span class="operator">*</span>), <span class="built_in">SUM</span>(num), <span class="built_in">AVG</span>(num), <span class="built_in">MAX</span>(num), MIX(num) <span class="keyword">FROM</span> tb_1 <span class="keyword">GROUP</span> <span class="keyword">BY</span> deptno;        # 分组显示 deptno 中 num 的总数、总和、平均值、最大值和最小值</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="HAVING子句"><a href="#HAVING子句" class="headerlink" title="HAVING子句"></a>HAVING子句</h2><p>　　-　WHERE 搜索条件在进行分组操作之前应用；而 HAVING 搜索条件在进行分组操作之后应用。<br>　　-　HAVING 语法与 WHERE 语法类似，但 HAVING 可以包含聚合函数。<br>　　-　HAVING 子句可以引用选择列表中显示的任意项。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> deptno,<span class="built_in">COUNT</span>(<span class="operator">*</span>),<span class="built_in">SUM</span>(sal),<span class="built_in">AVG</span>(sal),<span class="built_in">MAX</span>(sal),<span class="built_in">MIN</span>(sal) <span class="keyword">FROM</span> scott.emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> deptno <span class="keyword">HAVING</span> <span class="built_in">SUM</span>(sal) <span class="operator">&gt;</span> <span class="number">9000</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">SUM</span>(sal) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="ROWNUM"><a href="#ROWNUM" class="headerlink" title="ROWNUM"></a>ROWNUM</h2><p>　　-　虚假的列(伪列)，因为 <code>ROWNUM</code> 都是从1开始,但是1以上的自然数在 <code>ROWNUM</code> 做等于判断是时认为都是 <code>false</code> 条件，即必须有前一个才会有后一个。<br><br><br></p>
<h2 id="INDEX-索引"><a href="#INDEX-索引" class="headerlink" title="INDEX　索引"></a>INDEX　索引</h2><p>　　-　在数据库中用来加速对表的查询，通过使用快速路径访问方法快速定位数据，减少了磁盘的 <code>I/O</code></p>
<ul>
<li>特点<ul>
<li>与表独立存放，但不能独立存在，必须属于某个表</li>
<li>由数据库自动维护，表被删除时，该表上的索引自动被删除。</li>
</ul>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX index_name <span class="keyword">ON</span> tb_1(name);        # 给表 tb_1 中的字段 name 创建一个索引名为 index_name 的索引</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="SEQUENCE-序列"><a href="#SEQUENCE-序列" class="headerlink" title="SEQUENCE　序列"></a>SEQUENCE　序列</h2><blockquote>
<p>eg：</p>
</blockquote>
<blockquote>
<p>CREATE SEQUENCESE seq_name<br>minvalue 1　　　　 　　　 　 　　最小值：1<br>maxvalue 999　　　　　　　 　　最大值：999<br>start with 1　　　　 　　　 　　　开始值：1<br>increment by 5　　 　 　 　　 　   自增值：5<br>cache 20;　　　 　　 　  　　  　   缓存值:20，超过20会自动创建一个20个值的缓存，不需要时 noache</p>
</blockquote>
<ul>
<li>序列的两个重要属性：<code>currval</code> 当前值，<code>nextval</code> 当前值增加一次后的值<ul>
<li>seq_name.currval　　　　　　1</li>
<li>seq_name.nextval　　　　　　6<br><br><br></li>
</ul>
</li>
</ul>
<h2 id="VIEW-视图"><a href="#VIEW-视图" class="headerlink" title="VIEW　视图"></a>VIEW　视图</h2><p>　　-　因为部分已执行过，所以部分不需要再编译，使用的时候比普通的语句快，简化sql语句</p>
<ul>
<li>创建：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v_indo <span class="keyword">AS</span> <span class="keyword">SELECT</span> deptno <span class="keyword">AS</span> 部门, <span class="built_in">count</span>(<span class="operator">*</span>) 人数, <span class="built_in">SUM</span>(sal) 总工资, <span class="built_in">AVG</span>(sal) 平均工资 <span class="keyword">FROM</span> tb_1 <span class="keyword">GROUP</span> <span class="keyword">BY</span> deptno;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v_info;</span><br></pre></td></tr></table></figure>

<ul>
<li>删除：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> v_info;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Rules</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>「Scrapy」自定义图片管道ImagesPipeline下载图片</title>
    <url>/Technique/aa344f5b.html</url>
    <content><![CDATA[<p>题外话：前些天不是重新搭建了hexo吗，然后今天有个知识点忘记了，想看看之前的笔记，结果发现，没了，是真的没了！！沃日，之前重新搭建的时候忘记备份了，因为Windows下有一份旧资料，恰巧那份旧资料是几乎没同步过，所以出事了…	教训：<font color="red">凡事记得先备份！！</font></p>
<hr>
<p><br><br></p>
<h2 id="一、使用场景"><a href="#一、使用场景" class="headerlink" title="一、使用场景"></a>一、使用场景</h2><p>当我们在抓取某些资源的时候，刚好同时想下载它的图片的时候，就可以用到<code>scrapy</code>提供的一个<code>item pipeline</code>，这条管道被称作图片管道，在<a href="https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/images.html#scrapy.contrib.pipeline.images.ImagesPipeline">ImagesPipeline</a>类中实现，提供了一个方便并具有额外特性的方法，来下载并本地存储图片:</p>
<ul>
<li>将所有下载的图片转换成通用的格式（JPG）和模式（RGB）</li>
<li>避免重新下载最近已经下载过的图片</li>
<li>缩略图生成</li>
<li>检测图像的宽&#x2F;高，确保它们满足最小限制<br><br><br></li>
</ul>
<h2 id="二、项目实战"><a href="#二、项目实战" class="headerlink" title="二、项目实战"></a>二、项目实战</h2><p>这里直接使用自定义的方法，以便于自定义我们图片的名称、下载路径<br><br></p>
<h3 id="0x01-定义一个Item"><a href="#0x01-定义一个Item" class="headerlink" title="0x01. 定义一个Item"></a>0x01. 定义一个Item</h3><p>在<code>items.py</code>中新建一个<code>class</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="comment">## 这里我只定义两个属性，标题用于存储图片的父目录，链接截取一部分当图片名称</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ImageItem</span>(scrapy.Item):</span><br><span class="line">    image_urls = scrapy.Field()        <span class="comment"># 图片链接</span></span><br><span class="line">    alt = scrapy.Field()        <span class="comment"># 图片标题</span></span><br></pre></td></tr></table></figure>
<br>

<h3 id="0x02-配置settings-py"><a href="#0x02-配置settings-py" class="headerlink" title="0x02. 配置settings.py"></a>0x02. 配置<code>settings.py</code></h3><p>在<code>settings.py</code>中修改或添加以下信息</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启用图片管道动能，MyImagesPipeline是我自定义的class，在下面的步骤会进行创建</span></span><br><span class="line">ITEM_PIPELINES = &#123;<span class="string">&#x27;meituba.pipelines.MyImagesPipeline&#x27;</span>: <span class="number">1</span>,&#125;</span><br><span class="line">IMAGES_STORE = <span class="string">&#x27;images&#x27;</span>                <span class="comment"># 存储的根目录</span></span><br></pre></td></tr></table></figure>

<p>如果需要生成缩略图：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 当前默认存储路径为&lt;IMAGES_STORE&gt;/thumbs/big和&lt;IMAGES_STORE&gt;/thumbs/small</span></span><br><span class="line">IMAGES_THUMBS = &#123;</span><br><span class="line">    <span class="string">&#x27;small&#x27;</span>: (<span class="number">50</span>, <span class="number">50</span>),            <span class="comment"># key和value均可自定义</span></span><br><span class="line">    <span class="string">&#x27;big&#x27;</span>: (<span class="number">270</span>, <span class="number">270</span>),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果需要过滤过小的图片：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 过滤图片高度小于170、宽度小于260的图片</span></span><br><span class="line">IMAGES_MIN_HEIGHT = <span class="number">170</span></span><br><span class="line">IMAGES_MIN_WIDTH = <span class="number">260</span></span><br></pre></td></tr></table></figure>

<p>如果需要忽略近期已经下载过的图片：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 90天的图片失效期限</span></span><br><span class="line">IMAGES_EXPIRES = <span class="number">90</span></span><br></pre></td></tr></table></figure>
<br>

<h3 id="0x03-自定义图片管道"><a href="#0x03-自定义图片管道" class="headerlink" title="0x03. 自定义图片管道"></a>0x03. 自定义图片管道</h3><p>在<code>pipelines.py</code>中重写<code>file_path()</code>，达到自定义图片存储位置和自定义图片名称的效果</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.pipelines.images <span class="keyword">import</span> ImagesPipeline</span><br><span class="line"><span class="keyword">from</span> scrapy.http <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyImagesPipeline</span>(<span class="title class_ inherited__">ImagesPipeline</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_media_requests</span>(<span class="params">self, item, info</span>):</span><br><span class="line">        sign = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> image_url <span class="keyword">in</span> item[<span class="string">&#x27;image_urls&#x27;</span>]:</span><br><span class="line">            sign += <span class="number">1</span></span><br><span class="line">            <span class="keyword">yield</span> Request(url=image_url, meta=&#123;<span class="string">&#x27;item&#x27;</span>: item, <span class="string">&#x27;sign&#x27;</span>: sign&#125;)</span><br><span class="line">    <span class="comment"># 重写file_path()，自定义存储文件夹名字和图片名字</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">file_path</span>(<span class="params">self, request, response=<span class="literal">None</span>, info=<span class="literal">None</span></span>):</span><br><span class="line">        item = request.meta[<span class="string">&#x27;item&#x27;</span>]</span><br><span class="line">        sign = request.meta[<span class="string">&#x27;sign&#x27;</span>]-<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;%s/%s&#x27;</span> % (item[<span class="string">&#x27;alt&#x27;</span>][sign], request.url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 重写thumb_path()，自定义缩略图文件名</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">thumb_path</span>(<span class="params">self, request, thumb_id, response=<span class="literal">None</span>, info=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;thumbs/%s/%s&#x27;</span> % (thumb_id, request.url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>

<h3 id="0x04-编写spider"><a href="#0x04-编写spider" class="headerlink" title="0x04. 编写spider"></a>0x04. 编写spider</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Spider</span><br><span class="line"><span class="keyword">from</span> meituba.items <span class="keyword">import</span> ImageItem</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeituSpider</span>(<span class="title class_ inherited__">Spider</span>):</span><br><span class="line">    name = <span class="string">&quot;meitu&quot;</span></span><br><span class="line">    <span class="comment"># allowed_domains = [&quot;meituba.com&quot;]</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;http://www.meituba.com/tag/xueshengmei.html&#x27;</span>]</span><br><span class="line">    download_delay = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        item = ImageItem()</span><br><span class="line">        image_urls = response.xpath(<span class="string">&#x27;/html/body/div[4]/div[1]/div[2]/ul/li/div[1]/a/img/@src&#x27;</span>).extract()</span><br><span class="line">        alt = response.xpath(<span class="string">&#x27;/html/body/div[4]/div[1]/div[2]/ul/li/div[1]/a/img/@alt&#x27;</span>).extract()</span><br><span class="line">        item[<span class="string">&#x27;image_urls&#x27;</span>] = image_urls</span><br><span class="line">        item[<span class="string">&#x27;alt&#x27;</span>] = alt</span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="三、效果展示"><a href="#三、效果展示" class="headerlink" title="三、效果展示"></a>三、效果展示</h2><p>运行<code>scrapy crawl meitu</code>， 即可查看效果<br><br><br></p>
<blockquote>
<p>ps：凡事先看官网文档：（<a href="https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/images.html">中文文档</a>非官方，英文好的可以看<a href="https://docs.scrapy.org/en/latest">英文官方网站</a>）</p>
</blockquote>
]]></content>
      <categories>
        <category>Technique</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title>利用PyInstaller打包发布exe程序</title>
    <url>/Technique/53934d9f.html</url>
    <content><![CDATA[<p>在Windows下每次运行python脚本都得打开CMD，简直难受得一批！找了一下可以打包成exe程序的库，事情一下子就轻松得多了！<br><br><br></p>
<h2 id="一、安装准备"><a href="#一、安装准备" class="headerlink" title="一、安装准备"></a>一、安装准备</h2><h3 id="0x01-安装pywin32"><a href="#0x01-安装pywin32" class="headerlink" title="0x01. 安装pywin32"></a>0x01. 安装pywin32</h3><p>下载适用于Windows版本和Python版本匹配的<a href="https://sourceforge.net/projects/pywin32/files/pywin32/">pywin32</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ pip3 install &lt;pywin32本地文件&gt;</span><br></pre></td></tr></table></figure>
<br>

<h3 id="0x02-安装PyInstaller"><a href="#0x02-安装PyInstaller" class="headerlink" title="0x02. 安装PyInstaller"></a>0x02. 安装PyInstaller</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pip3 install pyinstaller</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h2 id="二、PyInstaller部分参数"><a href="#二、PyInstaller部分参数" class="headerlink" title="二、PyInstaller部分参数"></a>二、PyInstaller部分参数</h2><ul>
<li>-v，–version　　　　　　　　　　　打印<code>PyInstaller</code>当前版本</li>
<li>-F，–onefile　　　　　　　　　　　 生成单个捆绑的可执行程序</li>
<li>-D，–onedir　　　　　　　　　　　创建包含可执行文件的单目录（默认） </li>
<li>-n &lt;Name&gt;，–name &lt;Name&gt;　　　　自定义生成的程序名</li>
<li>-p &lt;Dir&gt;，–paths &lt;Dir&gt;　　　　　　设置导入库的路径（和使用<code>PYTHONPATH</code>效果相似），<br> 允许多个路径，以 <code>:</code> 分割</li>
<li>-i，–icon&#x3D;&lt;File&gt;　　　　　　　　　 设置程序的图标</li>
<li>-c，–nowindowed，–console　　　　打开标准<code>i/o</code>的控制台窗口（默认）</li>
<li>-w，–windowed，–noconsole　　　不为标准<code>i/o</code>提供控制台窗口</li>
<li>–upx-dir&#x3D;&lt;File&gt;　　　UPX主要用于压缩，默认会自动搜索<code>pyinstaller</code>根目录或项目根目录，<br> 否则需要添加该参数并指定<code>upx.exe</code>的路径，需要自己<a href="https://github.com/upx/upx/releases">下载</a></li>
<li>–noupx　　　　　　　　　　　　　　不使用UPX</li>
<li>–version-file&#x3D;&lt;File&gt;　　　　　　　　添加版本信息<br><br><br></li>
</ul>
<h2 id="三、打包并发布程序"><a href="#三、打包并发布程序" class="headerlink" title="三、打包并发布程序"></a>三、打包并发布程序</h2><h3 id="a-制作程序的版本信息"><a href="#a-制作程序的版本信息" class="headerlink" title="a. 制作程序的版本信息"></a>a. 制作程序的版本信息</h3><p><code>pyi-grab_version</code>目录：<code>D:\Python\Python36\Scripts\pyi-grab_version.exe</code><br><br></p>
<h4 id="0x01-直接使用pyi-grab-version-exe获取某个exe程序的版本信息"><a href="#0x01-直接使用pyi-grab-version-exe获取某个exe程序的版本信息" class="headerlink" title="0x01. 直接使用pyi-grab_version.exe获取某个exe程序的版本信息"></a>0x01. 直接使用<code>pyi-grab_version.exe</code>获取某个<code>exe</code>程序的版本信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ D:\Python\Python36\Scripts\pyi-grab_version.exe D:\Git\git-bash.exe</span><br><span class="line"><span class="comment"># Version info written to: file_version_info.txt</span></span><br></pre></td></tr></table></figure>
<p><img src="http://p925vil75.bkt.gdipper.com/package-and-release-exe-program-with-PyInstaller_01.webp" alt="可恶！图片又加载失败了呢!"><br><br></p>
<h4 id="0x02-模仿文件中原有的内容进行适当的修改即可"><a href="#0x02-模仿文件中原有的内容进行适当的修改即可" class="headerlink" title="0x02. 模仿文件中原有的内容进行适当的修改即可"></a>0x02. 模仿文件中原有的内容进行适当的修改即可</h4><p><br><br></p>
<h3 id="b-打包发布程序"><a href="#b-打包发布程序" class="headerlink" title="b. 打包发布程序"></a>b. 打包发布程序</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pyinstaller -F -i C:\Users\valen\Desktop\favicon.ico --version-file=C:\Users\valen\Desktop\file_version_info.txt -n vpn C:\Users\valen\Desktop\vpn_script.py</span><br></pre></td></tr></table></figure>

<p><font color="red">注意：打包含多进程的文件时，请在主窗口文件中加入以下代码：</font></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">multiprocessing.freeze_support()</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<p>文末照旧，贴上<code>PyInstaller</code>官方文档链接：<a href="https://pyinstaller.readthedocs.io/en/latest/">https://pyinstaller.readthedocs.io/en/latest/</a></p>
]]></content>
      <categories>
        <category>Technique</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>PyInstaller</tag>
      </tags>
  </entry>
  <entry>
    <title>「Private」About My Dream</title>
    <url>/Porse/960f91b8.html</url>
    <content><![CDATA[<h2 id="Dream-List"><a href="#Dream-List" class="headerlink" title="Dream List"></a>Dream List</h2><ul>
<li><input checked="" disabled="" type="checkbox"> 看一场演唱会（五月天）</li>
<li><input checked="" disabled="" type="checkbox"> 省外旅行一次（非跟团）</li>
<li><input disabled="" type="checkbox"> <del>国外旅行一次（非跟团）</del></li>
<li><input disabled="" type="checkbox"> 玩一次蹦极</li>
<li><input disabled="" type="checkbox"> 与爱人坐一次摩天轮</li>
<li><input disabled="" type="checkbox"> 学一门自己喜欢的编程语言（python）</li>
<li><input checked="" disabled="" type="checkbox"> 能处于一个融洽的开发团队</li>
</ul>
<br>

<ul>
<li><input disabled="" type="checkbox"> 看一场演唱会（华晨宇）</li>
<li><input disabled="" type="checkbox"> 养一只狗</li>
<li><input disabled="" type="checkbox"> 买房（能光着脚丫走动）</li>
<li><input disabled="" type="checkbox"> 用吉他弹一首曲</li>
<li><input disabled="" type="checkbox"> 滑板做一次Ollie</li>
</ul>
]]></content>
      <categories>
        <category>Porse</category>
      </categories>
      <tags>
        <tag>Dream</tag>
      </tags>
  </entry>
  <entry>
    <title>「Private」利用Python制作一个 番羽 士啬 脚本</title>
    <url>/Technique/3f9c9ab4.html</url>
    <content><![CDATA[<p>相信有部分玩家跟我一样，对墙外的需求不多，只是偶尔用一下！但是呢，梯子资源难找，幸运的是我这里收集了几个一直提供免费的资源网站，在修改<code>host</code>的方法逐渐消失的时候还可以舒服一小哈子！将就吧！<br><br><br></p>
<h5 id="0x01-获取信息"><a href="#0x01-获取信息" class="headerlink" title="0x01. 获取信息"></a>0x01. 获取信息</h5><p>直接请求目标站点，提取梯子信息，这里主要用到的库有：<code>requests</code>、<code>lxml</code>和<code>fake-useragent</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">MAX_RETRY = <span class="number">10</span></span><br><span class="line">ua = UserAgent(use_cache_server=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">spider</span>(<span class="params">cnt=<span class="number">1</span></span>):</span><br><span class="line">    <span class="keyword">if</span> cnt &lt;= MAX_RETRY:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Preparing to obtain vpn:  &#123;&#125; / &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(cnt, MAX_RETRY))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;The number of connections has reached a maximum, Exit now!&#x27;</span>)</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: ua.random&#125;</span><br><span class="line">        r = rq.get(url=<span class="string">&#x27;http://ss.ishadowx.com/&#x27;</span>, headers=headers, timeout=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">            selector = etree.HTML(r.text)</span><br><span class="line"></span><br><span class="line">            ip = selector.xpath(<span class="string">&#x27;//div/h4[1]/span[1]/text()&#x27;</span>)</span><br><span class="line">            port = selector.xpath(<span class="string">&#x27;//div/h4[2]/span[1]/text()&#x27;</span>)</span><br><span class="line">            password = selector.xpath(<span class="string">&#x27;//div/h4[3]/span[1]/text()&#x27;</span>)</span><br><span class="line">            verity_way = selector.xpath(<span class="string">&#x27;//div/h4[4]/text()&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> [ip, port, password, verity_way]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> spider(cnt + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> spider(cnt + <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<br>

<h5 id="0x02-客户端连接"><a href="#0x02-客户端连接" class="headerlink" title="0x02. 客户端连接"></a>0x02. 客户端连接</h5><p><code>os.system()</code>调用本地软件<code>shadowsocks</code>命令，直接开启服务，获得上帝视角，一览墙外的风光！</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">system_script</span>(<span class="params">vpn</span>):</span><br><span class="line">    i = randint(<span class="number">0</span>, <span class="built_in">len</span>(vpn[<span class="number">0</span>])-<span class="number">1</span>)</span><br><span class="line">    command = <span class="string">&#x27;sslocal -b 127.0.0.1 -l 1080 -s &#123;&#125; -p &#123;&#125; -k &#123;&#125; -m &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(vpn[<span class="number">0</span>][i], vpn[<span class="number">1</span>][i].strip(), vpn[<span class="number">2</span>][i].strip(), vpn[<span class="number">3</span>][i][<span class="number">7</span>:])</span><br><span class="line">    os.system(command)</span><br></pre></td></tr></table></figure>
<br>

<h5 id="0x03-运行脚本"><a href="#0x03-运行脚本" class="headerlink" title="0x03. 运行脚本"></a>0x03. 运行脚本</h5><p>运行脚本，即可自动爬取目标网站上的梯子信息，然后会自动开启连接服务</p>
<p><img src="http://p925vil75.bkt.gdipper.com/using-python-to-make-a-vpn-script_01.webp" alt="可恶！图片加载失败了！"></p>
<p>Ps：<font color="red">配合相应的工具即可实现全局代理，我这里只用于浏览器代理切换，如切换浏览器的代理</font></p>
<p>贴一下<code>SwitchyOmega</code>插件地址：<a href="https://github.com/FelisCatus/SwitchyOmega">https://github.com/FelisCatus/SwitchyOmega</a><br><br></p>
<h5 id="0x04-资源清单"><a href="#0x04-资源清单" class="headerlink" title="0x04. 资源清单"></a>0x04. 资源清单</h5><table>
<thead>
<tr>
<th align="center">python 版本</th>
<th align="center">python 库</th>
<th align="center">本地客户端</th>
<th align="center">chrome 插件(可选)</th>
</tr>
</thead>
<tbody><tr>
<td align="center">python3</td>
<td align="center">requests、lxml、fake-useragent</td>
<td align="center">shadowsocks</td>
<td align="center">proxy-switchyomega</td>
</tr>
<tr>
<td align="center"><a href="https://www.python.org/downloads/">官网下载</a></td>
<td align="center">pip3 install xxx</td>
<td align="center">pip3 install xxx</td>
<td align="center"><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif">chrome 商店</a>&#x2F;<a href="https://github.com/FelisCatus/SwitchyOmega">Github</a></td>
</tr>
</tbody></table>
<p>完整源码挂在<code>GitHub</code>：<a href="https://github.com/cdd233/sslocal">cdd233&#x2F;sslocal</a> ，额外打包了一个<code>exe</code>程序。</p>
<p><font color="red">2021.09.20：这里只提供具体的实现方法，目前资源已失效，希望本教程对你会有帮助！</font></p>
]]></content>
      <categories>
        <category>Technique</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Script</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/Rules/2f57a694.html</url>
    <content><![CDATA[<h3 id="1-界定符"><a href="#1-界定符" class="headerlink" title="1. 界定符"></a>1. 界定符</h3><ul>
<li>界定符<br>  表示一个正则表达式的开始和结束　<code>//</code>　<code>##</code>　<code>&#123;&#125;</code><br>  但<code>&#123;&#125;</code>也可用作正则表达式的运算符，为避免产生歧义，通常不用<code>&#123;&#125;</code><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$pattern = <span class="string">&#x27;/[0-9]/&#x27;</span>;</span><br></pre></td></tr></table></figure>
<br><br></li>
</ul>
<h3 id="2-原子概念"><a href="#2-原子概念" class="headerlink" title="2. 原子概念"></a>2. 原子概念</h3><ul>
<li><p>可见原子<br>  <code>Unicode</code>编码表中用键盘输出后肉眼可见的字符</p>
</li>
<li><p>不可见原子<br>  <code>Unicode</code>编码表中用键盘输出后肉眼不可见的字符，例如空格等<br>  <br><br></p>
</li>
</ul>
<h3 id="3-元字符"><a href="#3-元字符" class="headerlink" title="3. 元字符"></a>3. 元字符</h3><ul>
<li><p>原子的筛选方式<br>  - 　 <code>|</code> 　 　 　匹配两个或多个分支选择<br>  -　 <code>[]</code> 　　 　匹配方括号中的任意一个原子<br>  -　<code>[^]</code>　　　匹配除方括号中的原子之外的任意字符，<code>^</code>必须跟在左方括号后面</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">[Dd]uang~  等同于  Duang~|duang~</span><br><span class="line">[a-zA-Z] 与 [a-z A-Z] 所匹配到的字符不一样,后者多匹配一个空格符</span><br></pre></td></tr></table></figure>
<br>

</li>
<li><p>原子的集合<br>- 　 <code>.</code>　　　　匹配除换行符之外的任意字符，注：<code>.</code>不是专一匹配符号<br>-　<code>\d</code>　　　　匹配任意一个十进制数字，即<code>[0-9]</code><br>-　<code>\D</code>　　　　匹配任意一个非十进制数字，即<code>[^0-9]</code><br>-　<code>\s</code>　　　　匹配一个不可见原子，即<code>[\f\n\r\t\v]</code><br>-　<code>\S</code>　　　　匹配一个可见原子，即<code>[^\f\n\r\t\v]</code><br>-　<code>\w</code>　　　　匹配任意一个数字、字母或下划线，即<code>[0-9a-zA-Z_]</code><br>-　<code>\W</code>　　　　匹配任意一个非数字、字母或下划线，即<code>[^0-9a-zA-Z_]</code><br><br><br></p>
</li>
</ul>
<h3 id="4-量词"><a href="#4-量词" class="headerlink" title="4. 量词"></a>4. 量词</h3><ul>
<li>量词<br>  -　<code>&#123;n&#125;</code>　　　　　表示其前面的原子恰好出现<code>n</code>次<br>  -　<code>&#123;n,&#125;</code>　　 　 　表示其前面的原子最少出现<code>n</code>次<br>  -　<code>&#123;n,m&#125;</code>　　　　表示其前面的原子最少出现<code>n</code>次，最多出现<code>m</code>次<br>  -　<code>*</code>　　　　　　匹配0次、1次或多次其之前的院子，即<code>&#123;0,&#125;</code><br>  -　<code>+</code>　　　　　　匹配1次或多次其之前的原子，即<code>&#123;1,&#125;</code><br>  -　<code>?</code>　　　　　　匹配0次或1次其之前的原子，即<code>&#123;0,1&#125;</code><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">[a-z]&#123;<span class="number">4</span>,<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<p><br><br></p>
<h3 id="5-其他"><a href="#5-其他" class="headerlink" title="5. 其他"></a>5. 其他</h3><ul>
<li><p>边界控制&#x2F;定位符<br>　　-　<code>^</code>　　　　匹配字符串开始的位置<br>　　-　<code>$</code>　　　　匹配字符串结束的位置<br>　　-　<code>()</code>　 　 　匹配其中的整体为一个原子</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">　　^Duang$　　　　强制必须以D开头，前面不能有其它内容，必须以g结尾</span><br><span class="line">　　(Duang)　　　　匹配一个整体Duang，当作一个原子对待</span><br></pre></td></tr></table></figure>


</li>
<li><p>修正模式&#x2F;修饰符<br>　　贪婪匹配<br>　　　　　　　　　-　匹配结果存在歧义是取其长</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$pattern = <span class="string">&#x27;/China.+123/&#x27;</span>;</span><br><span class="line">$subject = <span class="string">&#x27;I love China_123123123123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta"># result:    China_123123123123</span></span><br></pre></td></tr></table></figure>


</li>
<li><p>懒惰匹配<br>　　　-　匹配结果存在歧义是取其短</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$pattern = <span class="string">&#x27;/China.+123/U&#x27;</span>;</span><br><span class="line">$subject = <span class="string">&#x27;I love China_123123123123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta"># result:    China_123</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>*！　默认模式为贪婪匹配，若改为懒惰匹配只需要在界定符的后面加<code>U</code></p>
<p>　　常见的修正模式<br>　　-　<code>U</code>　懒惰匹配<br>　　-　<code>i</code>　忽略英文大小写<br>　　-　<code>x</code>　忽略空白<br>　　-　<code>s</code>　让元字符<code>.</code>匹配包括换行符在内的所有字符</p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　—— This is all.   2016.05.06</p>
]]></content>
      <categories>
        <category>Rules</category>
      </categories>
      <tags>
        <tag>Regex</tag>
      </tags>
  </entry>
  <entry>
    <title>等保测评-MySQL相关记录</title>
    <url>/%E7%AD%89%E4%BF%9D%E6%B5%8B%E8%AF%84/737ad06e.html</url>
    <content><![CDATA[<h2 id="配置生效时效"><a href="#配置生效时效" class="headerlink" title="配置生效时效"></a>配置生效时效</h2><ol>
<li><p>修改配置文件，重启MySQL服务生效。</p>
</li>
<li><p>SET GLOBAL，仅对当前会话及新会话生效，旧会话不生效，MySQL服务重启后失效。</p>
</li>
<li><p>SET SESSION，仅对当前会话生效，其他会话不生效，MySQL服务重启后失效。</p>
</li>
</ol>
<p><strong>修改配置的最优解是SET GLOBAL，然后修改配置文件，可以避免重启MySQL服务，并且MySQL服务重启后配置也能自动生效</strong>。</p>
<br>

<br>

<br>

<br>

<h2 id="查看安装路径"><a href="#查看安装路径" class="headerlink" title="查看安装路径"></a>查看安装路径</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show variables like &#x27;%basedir%&#x27;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select @@basedir;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> mysql</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -ef | grep mysql</span><br></pre></td></tr></table></figure>

<br>

<br>

<br>

<br>

<h2 id="密码相关参数"><a href="#密码相关参数" class="headerlink" title="密码相关参数"></a>密码相关参数</h2><p><strong>MySQL 5.6.6之后引入</strong>部分参数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select user,host,password,password_last_changed,password_expired,plugin from mysql.user;</span><br></pre></td></tr></table></figure>

<p><strong><font color="red">password，MySQL 5.7版本后该字段改为authentication_string</font></strong></p>
<p><strong>password_expired</strong>，该用户的过期时间，Y&#x2F;N</p>
<p><strong>password_last_changed</strong>，该用户密码最后一次修改的时间</p>
<p><strong>password_lifetime</strong>，该用户密码的生存时间，默认值为NULL</p>
<br>

<p><strong>MySQL 5.7.4之后改进</strong>。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">default_password_lifetime</span>=<span class="number">90</span></span><br></pre></td></tr></table></figure>

<br>

<br>

<br>

<br>

<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>查看插件的激活状态。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select PLUGIN_NAME,PLUGIN_STATUS,LOAD_OPTION from information_schema.plugins;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show plugins</span><br></pre></td></tr></table></figure>

<br>

<br>

<h3 id="validate-password"><a href="#validate-password" class="headerlink" title="validate_password"></a>validate_password</h3><p>新密码校验插件，<strong>MySQL 5.6.6之后引入，MySQL 5.7之后默认安装</strong>。</p>
<h4 id="a-配置查询"><a href="#a-配置查询" class="headerlink" title="a. 配置查询"></a>a. 配置查询</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &#x27;validate_password%&#x27;;</span><br></pre></td></tr></table></figure>

<br>

<h4 id="b-相关参数"><a href="#b-相关参数" class="headerlink" title="b. 相关参数"></a>b. 相关参数</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 禁止密码与当前用户名一致</span></span><br><span class="line"><span class="attr">validate_password_check_user_name</span>=<span class="literal">OFF</span></span><br><span class="line"><span class="comment"># 限制密码长度最小为8位</span></span><br><span class="line"><span class="attr">validate_password_length</span>=<span class="number">8</span></span><br><span class="line"><span class="comment"># 密码必须包含的大小写字母个数，受validate_password_policy影响。</span></span><br><span class="line"><span class="attr">validate_password_mixed_case_count</span>=<span class="number">1</span></span><br><span class="line"><span class="comment"># 密码必须包含的数字个数，受validate_password_policy影响。</span></span><br><span class="line"><span class="attr">validate_password_number_count</span>=<span class="number">1</span></span><br><span class="line"><span class="comment"># 密码强度检验等级，可以使用数值0、1、2或相应的符号值LOW、MEDIUM、STRONG来指定。</span></span><br><span class="line"><span class="comment"># 0/LOW：只检查长度。</span></span><br><span class="line"><span class="comment"># 1/MEDIUM：检查长度、数字、大小写、特殊字符。</span></span><br><span class="line"><span class="comment"># 2/STRONG：检查长度、数字、大小写、特殊字符、字典文件。</span></span><br><span class="line"><span class="attr">validate_password_policy</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure>

<br>

<br>

<br>

<h3 id="connection-control"><a href="#connection-control" class="headerlink" title="connection-control"></a>connection-control</h3><p><strong>MySQL 5.6.35以后提供</strong>。登录失败次数达到阈值后，响应延迟的时间，而不是锁定账号。</p>
<h4 id="a-配置查询-1"><a href="#a-配置查询-1" class="headerlink" title="a. 配置查询"></a>a. 配置查询</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &#x27;connection_control%&#x27;;</span><br></pre></td></tr></table></figure>

<br>

<h4 id="b-相关参数-1"><a href="#b-相关参数-1" class="headerlink" title="b. 相关参数"></a>b. 相关参数</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 记录登录失败的操作到IS库中</span></span><br><span class="line"><span class="attr">connection-control-failed-login-attempts</span>=FORCE_PLUS_PERMANENT</span><br><span class="line"><span class="comment"># 连续登录失败的次数，默认为3次，0表示不启用</span></span><br><span class="line"><span class="attr">connection_control_failed_connections_threshold</span>=<span class="number">3</span></span><br><span class="line"><span class="comment"># 响应延迟的最大时间，单位为毫秒，默认是25天</span></span><br><span class="line"><span class="attr">connection_control_max_connection_delay</span>=<span class="number">2147483647</span></span><br><span class="line"><span class="comment"># 响应延迟的最小时间，单位为毫秒，默认是1分钟，登录失败次数达到阈值后再失败会叠加时间，直到响应延迟的最大时间</span></span><br><span class="line"><span class="attr">connection_control_min_connection_delay</span>=<span class="number">1000</span></span><br></pre></td></tr></table></figure>

<br>

<br>

<br>

<br>

<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="一般查询日志（general-log）"><a href="#一般查询日志（general-log）" class="headerlink" title="一般查询日志（general log）"></a>一般查询日志（general log）</h3><p>开启general log能将所有到达MySQL Server的SQL语句记录下来。</p>
<h4 id="相关参数"><a href="#相关参数" class="headerlink" title="相关参数"></a>相关参数</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 日志开关</span></span><br><span class="line"><span class="attr">general_log</span>=<span class="literal">off</span></span><br><span class="line"><span class="comment"># 日志存放位置</span></span><br><span class="line"><span class="attr">general_log_file</span>=/tmp/general.log</span><br><span class="line"><span class="comment"># 日志输出类型，table/file</span></span><br><span class="line"><span class="attr">log_output</span>=table</span><br></pre></td></tr></table></figure>

<br>

<br>

<h3 id="二进制日志（binlog）"><a href="#二进制日志（binlog）" class="headerlink" title="二进制日志（binlog）"></a>二进制日志（binlog）</h3><p>MySQL的二进制日志可以说是MySQL最重要的日志，记录了所有的DDL和DML语句（更改数据库表和更改内容的SQL语句都会记录到binlog，对数据库的查询select或show等不会被binlog日志记录），以事件形式记录，还包含语句所执行的消耗的时间，MySQL的二进制日志是事务安全型的。<strong>一般来说开启二进制日志大概会有1%的性能损耗</strong>。<br></p>
<p>二进制日志包括两类文件： </p>
<ul>
<li>二进制日志索引文件（文件名后缀为.index）用于记录所有的二进制文件。</li>
</ul>
<ul>
<li>二进制日志文件（文件名后缀为.00000*）记录数据库所有的DDL和DML（除了数据查询语句）语句事件。</li>
</ul>
<br>

<h4 id="日志查询"><a href="#日志查询" class="headerlink" title="日志查询"></a>日志查询</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># log_bin，查看binlog日志的启用状态</span><br><span class="line"># log_bin_basename，查看binlog日志的存放位置，ls -l $log_bin_basename查看日志创建的时间</span><br><span class="line">show global variables like &#x27;%log_bin%&#x27;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看所有binlog日志列表</span><br><span class="line">show master logs;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看指定日志文件的内容（以表格形式）</span><br><span class="line">show binlog events in &#x27;mysql-bin.000002&#x27;;</span><br></pre></td></tr></table></figure>

<br>

<h4 id="相关参数-1"><a href="#相关参数-1" class="headerlink" title="相关参数"></a>相关参数</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 日志开关</span></span><br><span class="line"><span class="attr">log_bin</span>=<span class="literal">on</span></span><br><span class="line"><span class="comment"># 日志保存时间，默认为0，即永不删除</span></span><br><span class="line"><span class="attr">expire_logs_days</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure>

<br>

<br>

<h3 id="错误日志（errorlog）"><a href="#错误日志（errorlog）" class="headerlink" title="错误日志（errorlog）"></a>错误日志（errorlog）</h3><p>在MySQL数据库中，<strong>默认开启错误日志功能</strong>。一般情况下，错误日志存储在MySQL数据库的数据文件夹下，通常名称为hostname.err。<br></p>
<h4 id="配置查询"><a href="#配置查询" class="headerlink" title="配置查询"></a>配置查询</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &#x27;log_error%&#x27;; </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &#x27;log_warnings%&#x27;;</span><br></pre></td></tr></table></figure>

<br>

<h4 id="相关参数-2"><a href="#相关参数-2" class="headerlink" title="相关参数"></a>相关参数</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">log-error</span>=dir/&#123;filename&#125;</span><br></pre></td></tr></table></figure>



<h3 id="其他日志"><a href="#其他日志" class="headerlink" title="其他日志"></a>其他日志</h3><p><strong>重做日志（redo log）</strong> 、<strong>回滚日志（undo log）</strong> 、<strong>慢查询日志（slow query log）</strong> 、<strong>中继日志（relay log）</strong>等等不做了解。</p>
<br>

<br>

<br>

<br>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="flush-privileges"><a href="#flush-privileges" class="headerlink" title="flush privileges"></a>flush privileges</h3><p>本质上的作用是将当前user和privilige表中的用户信息&#x2F;权限设置从mysql库（MySQL数据库的内置库）中提取到内存里。MySQL用户数据和权限有修改后，希望在”不重启MySQL服务”的情况下直接生效，那么就需要执行这个命令。通常是在修改root帐号的设置后，怕重启后无法再登录进来，那么直接flush之后就可以看权限设置是否生效。而不必冒太大风险。</p>
<br>

<h3 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select Host,User,File_priv,Shutdown_priv,grant_priv from user;</span><br></pre></td></tr></table></figure>

<br>

<h3 id="安全连接"><a href="#安全连接" class="headerlink" title="安全连接"></a>安全连接</h3><p><strong>MySQL 5.7默认是开启SSL连接</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &#x27;%ssl%&#x27;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &#x27;tls_version&#x27;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>等保测评</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>等保测评-Oracle相关记录</title>
    <url>/%E7%AD%89%E4%BF%9D%E6%B5%8B%E8%AF%84/1521186.html</url>
    <content><![CDATA[<h3 id="登录方式"><a href="#登录方式" class="headerlink" title="登录方式"></a>登录方式</h3><p>sqlplus &#x2F;nolog + conn xxx&#x2F;xxx</p>
<p>登录方式不存在密码暴露</p>
<p>sqlplus xxx&#x2F;xxx</p>
<p>登录方式存在密码暴露</p>
<p>sqlplus &#x2F; as sysdba</p>
<p>以操作系统验证方式登录</p>
<br>

<br>

<br>

<br>

<br>

<h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><p><strong>oracle的日志文件有几种：警告日志，trace日志，audit日志，redo日志，归档日志。</strong></p>
<br>

<h4 id="警告日志"><a href="#警告日志" class="headerlink" title="警告日志"></a>警告日志</h4><p>也就是alert log。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># background_dump_dest，日志存放的路径</span><br><span class="line">show parameter background_dump_dest;</span><br></pre></td></tr></table></figure>

<br>

<br>

<h4 id="trace日志"><a href="#trace日志" class="headerlink" title="trace日志"></a>trace日志</h4><p>一般放seesion追踪的信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># user_dump_dest，日志存放的路径</span><br><span class="line">show parameter user_dump_dest;</span><br></pre></td></tr></table></figure>

<br>

<br>

<h4 id="audit日志"><a href="#audit日志" class="headerlink" title="audit日志"></a>audit日志</h4><p>审计的信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># audit_file_dest，日志存放的路径</span><br><span class="line"># audit_trail，审计跟踪方式</span><br><span class="line">show parameter audit;</span><br></pre></td></tr></table></figure>

<p>audit_trail相关参数：</p>
<ul>
<li><p>None：禁用数据库审计功能</p>
</li>
<li><p>DB：将audit trail记录在数据库的审计相关表中，如aud$，审计的结果只有连接信息，适用于对数据库进行一般管理；<br>  oracle 11g，正常安装后，DB是默认选项。</p>
</li>
<li><p>DB,Extended：审计结果里面除了连接信息，还包含了当时执行的具体语句，执行audit_trail&#x3D;db的所有操作，并填充sys.aud$表的sql_bind和sql_text clob类型列；</p>
</li>
<li><p>OS：将audit trail记录在操作系统文件中，文件名由audit_file_dest参数指定；</p>
</li>
<li><p>xml：以XML格式写入操作系统审核记录文件，记录审计节点的所有元素，但SQL_文本和SQL_绑定到操作系统XML审核文件除外。</p>
</li>
<li><p>xml, extended：执行audit_trail&#x3D;xml的所有操作，并尽可能填充sys.aud$表的SQL绑定和SQL文本CLOB类型列</p>
</li>
</ul>
<p>注：参数是static参数，需要重新启动数据库才能生效。</p>
<br>

<br>

<p>审计记录应包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息：</p>
<p>show parameter audit_sys_operations;</p>
<p>该参数默认值为false，启用后可对用户使用SYSDBA或SYSOPER特权连接时直接发出的SQL语句进行审计，审计记录和强制审计的记录存放在同一个文件中。</p>
<p>select sel, upd, del,ins,gra from dba_bJaudit_opts;</p>
<p>返回对象审计选项，应不全为 -</p>
<p>select sel,upd,del,ins,gra from dba_stmt_audit_opts;</p>
<p>返回语句审计选项，应不全部为cup</p>
<p>select sel,upd,del,ins,gra from dba_priv_audit_opts;</p>
<p>返回特权审计选项，应不全部为 -</p>
<br>

<br>

<h4 id="redo-日志"><a href="#redo-日志" class="headerlink" title="redo 日志"></a>redo 日志</h4><p>存放数据库的更改信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># member的值即日志存放的路径</span><br><span class="line">select member from v$logfile;</span><br></pre></td></tr></table></figure>

<br>

<br>

<h4 id="归档日志"><a href="#归档日志" class="headerlink" title="归档日志"></a>归档日志</h4><p>redo日志的历史备份。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># log_archive_dest，日志存放的路径</span><br><span class="line">select * from v$parameter where name like &#x27;log_archive_dest%&#x27;;</span><br></pre></td></tr></table></figure>

<br>

<br>

<br>

<br>

<h3 id="相关文件"><a href="#相关文件" class="headerlink" title="相关文件"></a>相关文件</h3><p>检查utlpwdmg.sql中“–check for the minimum length of the password”部分中的“length(password)&lt;”后的值；这个值为8或者以上<br>$ORACLE_HOME&#x2F;rdbms&#x2F;admin&#x2F;</p>
<ol>
<li>通过netmgr可以配置lisnter.ora和tnsnames.ora</li>
<li>lisnter.ora为oracle服务器使用的监听器配置文件，监听器可以通过lsnrctl进行管理</li>
<li>tnsnames.ora为客户端配置文件，为连接服务器的参数信息</li>
<li>sqlnet.ora 为服务端sql*net 网络配置文件，相关参数如下：</li>
</ol>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置客户端和服务端的log文件目录</span></span><br><span class="line"><span class="attr">log_directory_client</span> = /oracle/network/log</span><br><span class="line"><span class="attr">log_directory_server</span> = /oracle/network/trace</span><br></pre></td></tr></table></figure>

<br>

<p>当使用 sqlplus xxx&#x2F;xxx as sysdba方式登录数据库时，采用了操作系统的认证方式，任意的用户名密码都能够登录，且登录帐号为SYS。<br>这种情况只针对拥有SYSDBA 权限的用户，其他的用户都是需要用户名和密码才能登录。 </p>
<p>$ORACLE_HOME&#x2F;network&#x2F;admin目录下的sqlnet.ora文件中SQLNET.AUTHENTICATION_SERVICES参数来控制是使用操作系统验证还是Oracle密码文件认证。 </p>
<p>SQLNET.AUTHENTICATION_SERVICES参数有以下常用的几个值： </p>
<ul>
<li>ALL：所有认证方式(默认值)</li>
<li>NONE：基于Oracle密码文件认证</li>
<li>NTS：Windows 环境下基于操作系统方式验证</li>
</ul>
<p>其他验证方式: </p>
<ul>
<li>beq：Windows环境以外其他操作系统的本地操作系统认证方式) </li>
<li>kerberos5 : for Kerberos authentication </li>
<li>radius : for Remote Authentication Dial-In User Service (RADIUS) authentication </li>
<li>tcps : for SSL authentication</li>
</ul>
<p>说明:<br>在 Unix&#x2F;Linux下，默认情况下sqlnet.ora文件中是没有SQLNET.AUTHENTICATION_SERVICES参数的，此时是操作系统验证和Oracle密码验证并存。 </p>
<p>在加上SQLNET.AUTHENTICATION_SERVICES这个参数后，无论是设置为（NONE）、（NTS）或（NONE,NTS），都是基于Oracle密码验证。 </p>
<ol>
<li><p>sqlnet.ora文件为空，或用#注释掉</p>
<p> 基于Oracle密码文件验证</p>
</li>
<li><p>SQLNET.AUTHENTICATION_SERVICES &#x3D; (NTS) </p>
<p> 基于操作系统验证</p>
</li>
<li><p>SQLNET.AUTHENTICATION_SERVICES &#x3D; (NONE)</p>
<p> 基于Oracle密码文件验证</p>
</li>
<li><p>SQLNET.AUTHENTICATION_SERVICES &#x3D; (NONE,NTS) </p>
<p> 基于操作系统验证（前后顺序颠倒也一样）</p>
</li>
</ol>
<p>注意: 当 SQLNET.AUTHENTICATION_SERVICES &#x3D; (NONE) 后，当使用RMAN时，system用户就不能操作了，输入正确的密码也不行，只有sys用户并输入密码才可以。</p>
<br>

<br>

<br>

<p>Oracle的profiles文件是口令和资源限制的配置集合，包括CPU的时间、I&#x2F;O的使用、空闲时间、连接时间、并发会话数量、密码策略等对于资源的使用profile可以做到控制会话级别或语句调用级别。oracle自带的默认好多是不限制的，用户创建时都会被指定这个PROFILE。</p>
<p>dba_profiles各个字段含义：</p>
<ul>
<li><p>Idle_time：指定会话允许连续不活动的总的时间，以分钟为单位，超过该时间，会话将断开。</p>
</li>
<li><p>Connect_time：指定会话的总的连接时间，以分钟为单位。</p>
</li>
<li><p>Failed_login_attempts：指定在帐户被锁定之前所允许尝试登陆的的最大次数。</p>
</li>
<li><p>Password_lock_time：指定登陆尝试失败次数到达后帐户的锁定时间，以天为单位。</p>
</li>
<li><p>Password_life_time：指定同一密码所允许使用的天数。</p>
</li>
<li><p>Password_verify_function：该字段允许将复杂的PL&#x2F;SQL密码验证脚本做为参数传递到create profile语句。Oracle数据库提供了一个默认的脚本，但是自己可以创建自己的验证规则或使用第三方软件验证。 对Function名称，指定的是密码验证规则的名称，指定为Null则意味着不使用密码验证功能。</p>
</li>
</ul>
<br>

<br>

<br>

<br>

<p>查看远程登录：show parameter remote_login_passwordfile;</p>
<p>结果为NONE，远程无法登录。其中exclusive是唯一的数据库密码文件登录。</p>
<p>Value值有三种：</p>
<ul>
<li>NONE：默认值。在这种情况下，oracle会忽略口令文件，并且sysdba(系统管理员)访问只给予本地特许的登录。</li>
<li>EXCLUSIVE：exclusive该参数说明只有一个数据库可以使用这个口令文件。在这种模式下，口令文件可以包含用于多个特许的oracle账户的口令。这是推荐的操作模式，特别是在运行RMAN时，如果希望将RMAN与来自于远程客户端的数据库连接，则必须使用该参数设置。（RMAN是一种用于备份、还原和恢复数据库的oracle工具）</li>
<li>SHARED：该参数说明多个数据库可以使用相同的口令文件。这种模式只能保存SYS用户账户的口令。</li>
</ul>
<br>

<br>

<br>

<h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><p>查看所有用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from dba_user;</span><br><span class="line">select * from all_users;</span><br><span class="line">select * from user_users;</span><br></pre></td></tr></table></figure>

<br>

<p>查看用户系统权限 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from dba_sys_privs;</span><br><span class="line">select * from all_sys_privs;</span><br><span class="line">select * from user_sys_privs;</span><br></pre></td></tr></table></figure>

<br>

<p>查看所有角色 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from dba_roles;</span><br></pre></td></tr></table></figure>

<br>

<p>查看用户所拥有的角色</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from dba_role_privs;</span><br><span class="line">select * from user_role_privs;</span><br></pre></td></tr></table></figure>

<br>

<br>

<br>

<h3 id="安全标记"><a href="#安全标记" class="headerlink" title="安全标记"></a>安全标记</h3><p>检查是否安装oracle label security模块。如果安装，会有LBACSYS用户。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看是否创建策略，结果存在状态为enable的标签策略</span><br><span class="line">select policy_name,status from DBA_SA_POLICIES;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看是否创建级别，返回结果不为空</span><br><span class="line">select * from dba_sa_levels order by level_num;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看标签创建情况，返回结果不为空</span><br><span class="line">select * from dba_sa_labels;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看策略与模式、表的对应关系，判断是否针对重要信息资源设置敏感标签，返回结果不为空，且包含重要数据存储表格名称</span><br><span class="line">select * from dba_sa_tables_policies;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>等保测评</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
</search>
